{"version":3,"sources":["components/footer/Chat.tsx","components/form/file_upload_form/CreateChat.tsx","routes/Demo.tsx"],"names":["ChatWrapper","styled","div","props","theme","bgColor","ChatInput","input","SubmitBtn","button","Chat","_ref","register","React","createElement","Fragment","Object","assign","required","placeholder","type","DNS","process","LoadingWrapper","Main","Section","section","textColor","DataForm","form","FileUploadWrapper","FileUploadInput","FileUploadLabel","label","borderColor","FileUploadIcon","img","SampleDataWrapper","SampleData","CreateChat","_errors$file","isSubmitSuccess","setIsSubmitsuccess","useState","fileName","setFileName","threadId","setThreadId","handleSubmit","formState","errors","useForm","defaultValues","file","name","data","mutate","isLoading","useMutation","createChat","onSuccess","res","thread_id","onError","err","sendSampleDataMutate","sendSampleData","onSampleDataClick","Redirect","to","pathname","Loading","SideBarToggleBtn","encType","onSubmit","formData","FormData","append","validate","value","acceptedFormats","_value$","fileExtension","split","pop","toLowerCase","includes","onChange","e","_e$target","_e$target$files$","target","files","id","htmlFor","src","onClick","style","color","message","Demo","auth","useAuth","useEffect","SideBar"],"mappings":"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","file":"static/js/6.0253f860.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst ChatWrapper = styled.div`\n  background-color: ${(props) => props.theme.bgColor};\n  display: flex;\n  border-radius: 10px;\n  justify-content: center;\n  width: 60%;\n`;\nconst ChatInput = styled.input`\n  transition: all 0.3s;\n  text-align: center;\n  width: 95%;\n  margin-right: 15px;\n  border-radius: 10px;\n  outline: none;\n  border: 0;\n  &:focus {\n    background-color: #8888884e;\n  }\n`;\nconst SubmitBtn = styled.button`\n  display: none;\n`;\n\nfunction Chat({ register }: any) {\n  return (\n    <>\n      <ChatWrapper>\n        <ChatInput\n          {...register('name')}\n          required\n          placeholder=\"write the chating room name\"\n        />\n        <SubmitBtn type=\"submit\">제출</SubmitBtn>\n      </ChatWrapper>\n    </>\n  );\n}\n\nexport default Chat;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Chat from '../../footer/Chat';\n\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../../loading/Loading';\n\nimport { createChat, sendSampleData } from '../../../APIs/chat/api.chat';\nimport SideBarToggleBtn from '../../navbar/SideBarToggleBtn';\n\nconst DNS = process.env.REACT_APP_DNS;\n\nconst LoadingWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  background-color: ${(props) => props.theme.bgColor};\n  border-radius: 15px 0px 0px 15px;\n`;\n\nconst Section = styled.section`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst DataForm = styled.form`\n  width: 60%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-around;\n  p {\n    font-weight: 400;\n  }\n`;\n\nconst FileUploadWrapper = styled.div`\n  height: 50%;\n  width: 70%;\n`;\n\nconst FileUploadInput = styled.input`\n  display: none;\n`;\n\nconst FileUploadLabel = styled.label`\n  padding: 25% 20%;\n  margin-top: 15px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  p {\n    margin-top: 10px;\n  }\n`;\n\nconst FileUploadIcon = styled.img``;\n\nconst SampleDataWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst SampleData = styled.div`\n  cursor: pointer;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  border-radius: 10px;\n  padding: 5px 10px;\n  margin: 10px 5px;\n`;\n\nfunction CreateChat() {\n  const [isSubmitSuccess, setIsSubmitsuccess] = useState(false);\n  const [fileName, setFileName] = useState();\n  const [threadId, setThreadId] = useState();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      file: null,\n      name: '',\n    },\n  });\n\n  const { data, mutate, isLoading } = useMutation(createChat, {\n    onSuccess: (res) => {\n      setThreadId(res.thread_id);\n      setIsSubmitsuccess(true);\n    },\n    onError: (err) => {\n      // console.log(err);\n    },\n  });\n\n  const SubmitOnValid = (data: { file: any; name: string }) => {\n    const formData = new FormData();\n\n    data.file = data.file[0];\n\n    formData.append('name', data.name);\n    formData.append('file', data.file);\n\n    mutate(formData);\n  };\n\n  const { mutate: sendSampleDataMutate } = useMutation(sendSampleData, {\n    onSuccess: (res) => {\n      setThreadId(res.thread_id);\n      setIsSubmitsuccess(true);\n    },\n    onError: (err) => {\n      // console.log(err);\n    },\n  });\n\n  const onSampleDataClick = (fileName: string) => {\n    sendSampleDataMutate(fileName);\n  };\n\n  return (\n    <>\n      {isSubmitSuccess ? (\n        <Redirect\n          to={{\n            pathname: `/chat/${threadId}`,\n          }}\n        />\n      ) : isLoading ? (\n        <LoadingWrapper>\n          {' '}\n          <Loading />\n        </LoadingWrapper>\n      ) : (\n        <Main>\n          <SideBarToggleBtn />\n          <Section>\n            <DataForm\n              encType=\"multipart/form-data\"\n              onSubmit={handleSubmit(SubmitOnValid)}\n            >\n              <FileUploadWrapper>\n                <FileUploadInput\n                  {...register('file', {\n                    required: 'File is Required',\n                    validate: (value: any) => {\n                      const acceptedFormats = ['csv', 'json'];\n                      if (value) {\n                        const fileExtension = value[0]?.name\n                          .split('.')\n                          .pop()\n                          .toLowerCase();\n                        if (!acceptedFormats.includes(fileExtension)) {\n                          return 'Invalid file format. Only csv or files are allowed.';\n                        }\n                      }\n                    },\n                    onChange: (e: any) => {\n                      setFileName(e?.target?.files[0]?.name);\n                    },\n                  })}\n                  type=\"file\"\n                  id=\"file\"\n                />\n                <FileUploadLabel htmlFor=\"file\">\n                  <FileUploadIcon src={`${DNS}:3000/Images/fileUpload.svg`} />\n                  {fileName ? (\n                    <p>{fileName}</p>\n                  ) : (\n                    <>\n                      <p>upload your own file</p>\n                      <p>Only .json and .csv files can be accepted</p>\n                    </>\n                  )}\n                </FileUploadLabel>\n                <SampleDataWrapper>\n                  <SampleData onClick={() => onSampleDataClick('iris.csv')}>\n                    <p>iris.csv</p>\n                  </SampleData>\n                  <SampleData\n                    onClick={() => onSampleDataClick('london_houses.csv')}\n                  >\n                    <p>london_houses.csv</p>\n                  </SampleData>\n                  <SampleData\n                    onClick={() => onSampleDataClick('shopping_trends.csv')}\n                  >\n                    <p>shopping_trends.csv</p>\n                  </SampleData>\n                </SampleDataWrapper>\n              </FileUploadWrapper>\n              <Chat register={register}></Chat>\n              <h1 style={{ color: 'red' }}>{errors?.file?.message as any}</h1>\n            </DataForm>\n          </Section>\n        </Main>\n      )}\n    </>\n  );\n}\n\nexport default CreateChat;\n","import React, { useEffect } from 'react';\nimport SideBar from '../components/navbar/SideBar';\n\nimport styled from 'styled-components';\nimport { useAuth } from '../hooks/auth';\nimport CreateChat from '../components/form/file_upload_form/CreateChat';\n\nconst Section = styled.div`\n  display: flex;\n`;\n\nfunction Demo() {\n  const auth = useAuth();\n\n  useEffect(() => {\n    auth();\n  }, []);\n\n  return (\n    <>\n      <Section>\n        <SideBar />\n        <CreateChat />\n      </Section>\n    </>\n  );\n}\n\nexport default Demo;\n"],"sourceRoot":""}