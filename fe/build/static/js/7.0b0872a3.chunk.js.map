{"version":3,"sources":["components/main/Intro.tsx","components/main/Features.tsx","components/main/team/Introduce.tsx","atoms/main/atom.team.ts","components/main/team/Team.tsx","routes/Main.tsx"],"names":["styled","div","span","button","Section","main","Title","h1","props","theme","mainPage","TitleColor","DiscriptionWrapper","Discription","p","textColor","mostHighlightColor","BtnWrapperGrid","StartBtnWapper","StartBtnLink","a","highlightTextColor","GithubBtn","bodyColor","Intro","auth","useAuth","history","useHistory","React","createElement","Fragment","SideBarToggleBtn","onClick","onStartBtnClick","undefined","localStorage","getItem","TokenKey","accessToken","alert","push","href","section","ContentWrapper","h2","Features","importedComponent","setImportedComponent","useState","useEffect","async","FeatureGrid","__webpack_require__","e","then","bind","default","importComponent","DNS","process","Profile","ImgWrapper","ProfileImg","img","NameAndRoll","Name","Roll","SelfIntroduce","Discript","Introduce","_ref","name","roll","say","url","motion","className","drag","dragConstraints","top","left","right","bottom","onHoverStart","el","target","lastChild","classList","add","onContentHoverStart","onHoverEnd","remove","onContentHoverEnd","src","introduce","atom","key","TeamWrapper","IntroduceTeam","boxShadow","Team","teamArr","useRecoilValue","map","item","index","Home","Main","SideBar"],"mappings":"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","file":"static/js/7.0b0872a3.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useAuth } from '../../hooks/auth';\nimport SideBarToggleBtn from '../navbar/SideBarToggleBtn';\nimport { useHistory } from 'react-router-dom';\nimport { TokenKey } from '../../interface/auth/interface.auth';\n\nconst ToggleBtnWapper = styled.div`\n  position: sticky;\n  top: 0;\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst ToggleSpanWapper = styled.span`\n  position: relative;\n  display: none;\n\n  span {\n    padding: 5px;\n    background-color: #ffffff;\n    color: black;\n    position: fixed;\n    display: none;\n  }\n  &[data-state='displayed-open'] {\n    span {\n      display: block;\n    }\n  }\n`;\n\nconst ToggleBtn = styled.button`\n  cursor: pointer;\n`;\n\nconst Section = styled.main`\n  @media (max-width: 1447px) {\n    padding: 50px 130px;\n  }\n  /* width: 84%; */\n  display: flex;\n  flex-direction: column;\n  padding: 150px 130px;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  display: block;\n  color: ${(props) => props.theme.mainPage.TitleColor};\n  font-size: 69px;\n  font-weight: bold;\n  padding: 24px;\n`;\n\nconst DiscriptionWrapper = styled.div`\n  padding: 40px 32px;\n`;\n\nconst Discription = styled.p`\n  color: ${(props) => props.theme.mainPage.textColor};\n  font-size: 23px;\n  line-height: 30px;\n  strong {\n    color: ${(props) => props.theme.mainPage.mostHighlightColor};\n    font-weight: 400;\n  }\n`;\n\nconst BtnWrapperGrid = styled.div`\n  padding: 30px 0;\n`;\n\nconst StartBtnWapper = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  a {\n    display: block;\n    width: 100px;\n    padding: 18px 14px;\n    border-radius: 8px;\n    span {\n      font-weight: 400;\n    }\n  }\n`;\n\nconst StartBtnLink = styled.a`\n  background-color: ${(props) => props.theme.mainPage.highlightTextColor};\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n  &:hover {\n    background-color: #cccccc;\n  }\n`;\n\nconst GithubBtn = styled.a`\n  background-color: ${(props) => props.theme.bodyColor};\n  color: ${(props) => props.theme.mainPage.highlightTextColor};\n  box-shadow: rgba(255, 255, 255, 0.14) 0px 0px 0px 1px;\n  transition: all 0.4s;\n\n  &:hover {\n    background-color: #1f1f1f;\n  }\n`;\n\nfunction Intro() {\n  const auth = useAuth('/demo');\n  const history = useHistory();\n\n  const onStartBtnClick = () => {\n    if (localStorage.getItem(TokenKey.accessToken) == undefined) {\n      alert('로그인 이후 이용 가능합니다');\n      history.push('/login');\n    } else {\n      auth();\n    }\n  };\n\n  return (\n    <>\n      <SideBarToggleBtn />\n      <Section>\n        <Title>\n          Automatic Generation of Visualizations and Infographics <br /> with\n          LLMs\n        </Title>\n        <DiscriptionWrapper>\n          <Discription>\n            <strong>Vista is a visualization generation tool</strong> based on\n            large language and image generation models, consisting of data\n            summarization, visualization goal derivation, visualization code\n            generation, and graphic generation modules. It provides a hybrid\n            user interface through natural language and direct manipulation to\n            support interactive charts, infographics, and data story generation.\n          </Discription>\n        </DiscriptionWrapper>\n        <BtnWrapperGrid>\n          <StartBtnWapper>\n            <StartBtnLink onClick={onStartBtnClick}>\n              <span>Get Started</span>\n            </StartBtnLink>\n            <GithubBtn href=\"https://github.com/seo-seoungjun/VISTA-FE\">\n              <span>Go Github</span>\n            </GithubBtn>\n          </StartBtnWapper>\n        </BtnWrapperGrid>\n      </Section>\n    </>\n  );\n}\n\nexport default Intro;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n// import FeatureGrid from './FeatureGrid';\n\nconst Section = styled.section`\n  padding: 0 70px;\n  min-height: 85vh;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst DiscriptionWrapper = styled.div`\n  @media (max-width: 1080px) {\n    flex-direction: column;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  display: block;\n  color: ${(props) => props.theme.mainPage.TitleColor};\n  font-size: 32px;\n  font-weight: bold;\n  padding: 24px;\n`;\n\nconst Discription = styled.p`\n  color: ${(props) => props.theme.mainPage.textColor};\n  font-size: 20px;\n`;\n\nfunction Features() {\n  const [importedComponent, setImportedComponent] =\n    useState<React.JSX.Element>();\n\n  useEffect(() => {\n    const importComponent = async () => {\n      const module = await import('./FeatureGrid');\n      const FeatureGrid = module.default;\n      setImportedComponent(<FeatureGrid />);\n    };\n\n    importComponent();\n  }, []);\n\n  return (\n    <Section>\n      <ContentWrapper>\n        <DiscriptionWrapper>\n          <Title>What's in VISTA?</Title>\n          <Discription>\n            Everything you need to build great project based in data analytic\n          </Discription>\n        </DiscriptionWrapper>\n        {/* <FeatureGrid /> */}\n        {importedComponent}\n      </ContentWrapper>\n    </Section>\n  );\n}\n\nexport default Features;\n","import React from 'react';\nimport { motion } from 'framer-motion/dist/framer-motion';\nimport styled from 'styled-components';\nimport { Iintroduce } from '../../../atoms/main/atom.team';\n\nconst DNS = process.env.REACT_APP_DNS;\n\nconst Profile = styled.div`\n  display: 'flex';\n  flex-direction: 'column';\n  width: 100%;\n  flex-shrink: 0;\n  flex-basis: 330px;\n`;\n\nconst ImgWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ProfileImg = styled.img`\n  width: 70%;\n  padding: 10px;\n  pointer-events: none;\n`;\n\nconst NameAndRoll = styled.div`\n  padding: 30px;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n`;\n\nconst Name = styled.span`\n  font-size: 22px;\n  color: ${(props) => props.theme.mainPage.mostHighlightColor};\n`;\n\nconst Roll = styled.span``;\n\nconst SelfIntroduce = styled.div`\n  top: 0;\n  opacity: 0;\n  flex-shrink: 0;\n  flex-basis: 330px;\n  position: relative;\n  background-color: black;\n  display: flex;\n  align-items: center;\n  transition: top 1s, opacity 1s;\n  &.on-hover {\n    top: -100%;\n    opacity: 1;\n  }\n`;\n\nconst Discript = styled.p`\n  padding: 20px;\n  text-align: center;\n  color: ${(props) => props.theme.mainPage.TitleColor};\n`;\n\nfunction Introduce({ name, roll, say, url }: Iintroduce) {\n  const onContentHoverStart = (e: MouseEvent) => {\n    const target = e.target as HTMLDivElement;\n    const el = target.lastChild as HTMLDivElement;\n    // console.log(el);\n    el?.classList.add('on-hover');\n  };\n\n  const onContentHoverEnd = (e: MouseEvent) => {\n    const target = e.target as HTMLDivElement;\n    const el = target.lastChild as HTMLDivElement;\n    // console.log(el);\n    el?.classList.remove('on-hover');\n  };\n\n  return (\n    <>\n      <motion.div\n        className=\"content\"\n        drag\n        dragConstraints={{\n          top: -50,\n          left: -50,\n          right: 50,\n          bottom: 50,\n        }}\n        onHoverStart={(e) => onContentHoverStart(e)}\n        onHoverEnd={(e) => onContentHoverEnd(e)}\n      >\n        <Profile className=\"ctx\">\n          <ImgWrapper>\n            <ProfileImg src={`${DNS}:3000/Images/${url}`} />\n          </ImgWrapper>\n          <NameAndRoll>\n            <Name>{name}</Name>\n            <Roll>{roll}</Roll>\n          </NameAndRoll>\n        </Profile>\n        <SelfIntroduce className=\"ctx\">\n          <Discript>{say}</Discript>\n        </SelfIntroduce>\n      </motion.div>\n    </>\n  );\n}\n\nexport default Introduce;\n","import { atom } from 'recoil';\n\nexport interface Iintroduce {\n  name: string;\n  roll: string;\n  say: string;\n  url: string;\n}\n\nexport const introduce = atom<Iintroduce[]>({\n  key: 'introduce',\n  default: [\n    {\n      name: 'Seo Seoung Jun',\n      roll: 'Front-end',\n      say: '안녕하세요! 프론트 엔드 개발을 맡은 서성준입니다',\n      url: 'seoungjun.png',\n    },\n    {\n      name: 'Lee Sa Bine',\n      roll: 'AI',\n      say: '안녕하세요! 인공지능 개발을 맡은 이사빈니다',\n      url: 'sabin.png',\n    },\n    {\n      name: 'Choi Seung Hoon',\n      roll: 'Back-end',\n      say: '안녕하세요! 백엔드 개발을 맡은 최승훈입니다',\n      url: 'sunghoon.png',\n    },\n  ],\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilValue } from 'recoil';\nimport Introduce from './Introduce';\nimport { introduce } from '../../../atoms/main/atom.team';\n\nconst Section = styled.section`\n  padding: 150px 70px;\n  min-height: 90vh;\n`;\n\nconst TeamWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n`;\n\nconst DiscriptionWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  display: block;\n  color: ${(props) => props.theme.mainPage.TitleColor};\n  font-size: 32px;\n  font-weight: bold;\n  padding: 24px;\n`;\n\nconst IntroduceTeam = styled.div`\n  padding: 60px 20%;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  color: ${(props) => props.theme.mainPage.textColor};\n  justify-content: space-around;\n  .content {\n    width: 28%;\n    height: 330px;\n    background-color: #11111b;\n    display: flex;\n    flex-direction: column;\n    box-shadow: ${(props) => props.theme.mainPage.boxShadow};\n    border-radius: 20px;\n    cursor: grab;\n    overflow-y: hidden;\n  }\n`;\n\nfunction Team() {\n  const teamArr = useRecoilValue(introduce);\n\n  return (\n    <Section>\n      <TeamWrapper>\n        <DiscriptionWrapper>\n          <Title>Our Team</Title>\n        </DiscriptionWrapper>\n        <IntroduceTeam>\n          <ContentWrapper>\n            {teamArr?.map((item, index) => (\n              <Introduce\n                key={index}\n                name={item.name}\n                roll={item.roll}\n                say={item.say}\n                url={item.url}\n              />\n            ))}\n          </ContentWrapper>\n        </IntroduceTeam>\n      </TeamWrapper>\n    </Section>\n  );\n}\n\nexport default Team;\n","import React from 'react';\nimport SideBar from '../components/navbar/SideBar';\nimport styled from 'styled-components';\nimport Intro from '../components/main/Intro';\nimport Features from '../components/main/Features';\nimport Team from '../components/main/team/Team';\n\nconst Section = styled.main`\n  display: flex;\n`;\n\nconst Home = styled.div``;\n\nfunction Main() {\n  return (\n    <>\n      <Section>\n        <SideBar />\n        <Home>\n          <Intro />\n          <Features />\n          <Team />\n        </Home>\n      </Section>\n    </>\n  );\n}\n\nexport default Main;\n"],"sourceRoot":""}