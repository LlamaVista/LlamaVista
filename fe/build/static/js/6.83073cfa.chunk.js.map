{"version":3,"sources":["components/footer/Chat.tsx","components/form/file_upload_form/CreateChat.tsx","routes/Demo.tsx"],"names":["ChatWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","bgColor","ChatInput","input","_templateObject2","SubmitBtn","button","_templateObject3","Chat","_ref","register","React","createElement","Fragment","Object","assign","required","placeholder","type","LoadingWrapper","Main","Section","section","textColor","DataForm","form","_templateObject4","FileUploadWrapper","_templateObject5","FileUploadInput","_templateObject6","FileUploadLabel","label","_templateObject7","borderColor","FileUploadIcon","img","_templateObject8","SampleDataWrapper","_templateObject9","SampleData","_templateObject10","CreateChat","_errors$file","_useState","useState","_useState2","_slicedToArray","isSubmitSuccess","setIsSubmitsuccess","_useState3","_useState4","fileName","setFileName","_useState5","_useState6","threadId","setThreadId","_useForm","useForm","defaultValues","file","name","handleSubmit","errors","formState","_useMutation","useMutation","createChat","onSuccess","res","thread_id","onError","err","mutate","data","isLoading","sendSampleDataMutate","sendSampleData","onSampleDataClick","Redirect","to","pathname","concat","Loading","SideBarToggleBtn","encType","onSubmit","formData","FormData","append","validate","value","_value$","fileExtension","split","pop","toLowerCase","includes","onChange","e","_e$target","_e$target$files$","target","files","id","htmlFor","src","onClick","style","color","message","Demo","auth","useAuth","useEffect","SideBar"],"mappings":"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","file":"static/js/6.83073cfa.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst ChatWrapper = styled.div`\n  background-color: ${(props) => props.theme.bgColor};\n  display: flex;\n  border-radius: 10px;\n  justify-content: center;\n  width: 60%;\n`;\nconst ChatInput = styled.input`\n  transition: all 0.3s;\n  text-align: center;\n  width: 95%;\n  margin-right: 15px;\n  border-radius: 10px;\n  outline: none;\n  border: 0;\n  &:focus {\n    background-color: #8888884e;\n  }\n`;\nconst SubmitBtn = styled.button`\n  display: none;\n`;\n\nfunction Chat({ register }: any) {\n  return (\n    <>\n      <ChatWrapper>\n        <ChatInput\n          {...register('name')}\n          required\n          placeholder=\"write the chating room name\"\n        />\n        <SubmitBtn type=\"submit\">제출</SubmitBtn>\n      </ChatWrapper>\n    </>\n  );\n}\n\nexport default Chat;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Chat from '../../footer/Chat';\n\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../../loading/Loading';\n\nimport { createChat, sendSampleData } from '../../../APIs/chat/api.chat';\nimport SideBarToggleBtn from '../../navbar/SideBarToggleBtn';\n\nconst LoadingWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  background-color: ${(props) => props.theme.bgColor};\n  border-radius: 15px 0px 0px 15px;\n`;\n\nconst Section = styled.section`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst DataForm = styled.form`\n  width: 60%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-around;\n  p {\n    font-weight: 400;\n  }\n`;\n\nconst FileUploadWrapper = styled.div`\n  height: 50%;\n  width: 70%;\n`;\n\nconst FileUploadInput = styled.input`\n  display: none;\n`;\n\nconst FileUploadLabel = styled.label`\n  padding: 25% 20%;\n  margin-top: 15px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  p {\n    margin-top: 10px;\n  }\n`;\n\nconst FileUploadIcon = styled.img``;\n\nconst SampleDataWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst SampleData = styled.div`\n  cursor: pointer;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  border-radius: 10px;\n  padding: 5px 10px;\n  margin: 10px 5px;\n`;\n\nfunction CreateChat() {\n  const [isSubmitSuccess, setIsSubmitsuccess] = useState(false);\n  const [fileName, setFileName] = useState();\n  const [threadId, setThreadId] = useState();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      file: null,\n      name: '',\n    },\n  });\n\n  const { data, mutate, isLoading } = useMutation(createChat, {\n    onSuccess: (res) => {\n      setThreadId(res.thread_id);\n      setIsSubmitsuccess(true);\n    },\n    onError: (err) => {\n      // console.log(err);\n    },\n  });\n\n  const SubmitOnValid = (data: { file: any; name: string }) => {\n    const formData = new FormData();\n\n    data.file = data.file[0];\n\n    formData.append('name', data.name);\n    formData.append('file', data.file);\n\n    mutate(formData);\n  };\n\n  const { mutate: sendSampleDataMutate } = useMutation(sendSampleData, {\n    onSuccess: (res) => {\n      setThreadId(res.thread_id);\n      setIsSubmitsuccess(true);\n    },\n    onError: (err) => {\n      // console.log(err);\n    },\n  });\n\n  const onSampleDataClick = (fileName: string) => {\n    sendSampleDataMutate(fileName);\n  };\n\n  return (\n    <>\n      {isSubmitSuccess ? (\n        <Redirect\n          to={{\n            pathname: `/chat/${threadId}`,\n          }}\n        />\n      ) : isLoading ? (\n        <LoadingWrapper>\n          {' '}\n          <Loading />\n        </LoadingWrapper>\n      ) : (\n        <Main>\n          <SideBarToggleBtn />\n          <Section>\n            <DataForm\n              encType=\"multipart/form-data\"\n              onSubmit={handleSubmit(SubmitOnValid)}\n            >\n              <FileUploadWrapper>\n                <FileUploadInput\n                  {...register('file', {\n                    required: 'File is Required',\n                    validate: (value: any) => {\n                      const acceptedFormats = ['csv', 'json'];\n                      if (value) {\n                        const fileExtension = value[0]?.name\n                          .split('.')\n                          .pop()\n                          .toLowerCase();\n                        if (!acceptedFormats.includes(fileExtension)) {\n                          return 'Invalid file format. Only csv or files are allowed.';\n                        }\n                      }\n                    },\n                    onChange: (e: any) => {\n                      setFileName(e?.target?.files[0]?.name);\n                    },\n                  })}\n                  type=\"file\"\n                  id=\"file\"\n                />\n                <FileUploadLabel htmlFor=\"file\">\n                  <FileUploadIcon src=\"http://localhost:3000/Images/fileUpload.svg\" />\n                  {fileName ? (\n                    <p>{fileName}</p>\n                  ) : (\n                    <>\n                      <p>upload your own file</p>\n                      <p>Only .json and .csv files can be accepted</p>\n                    </>\n                  )}\n                </FileUploadLabel>\n                <SampleDataWrapper>\n                  <SampleData onClick={() => onSampleDataClick('cars.csv')}>\n                    <p>cars.csv</p>\n                  </SampleData>\n                  <SampleData onClick={() => onSampleDataClick('housing.csv')}>\n                    <p>housing.csv</p>\n                  </SampleData>\n                  <SampleData onClick={() => onSampleDataClick('Iris.csv')}>\n                    <p>Iris.csv</p>\n                  </SampleData>\n                </SampleDataWrapper>\n              </FileUploadWrapper>\n              <Chat register={register}></Chat>\n              <h1 style={{ color: 'red' }}>{errors?.file?.message as any}</h1>\n            </DataForm>\n          </Section>\n        </Main>\n      )}\n    </>\n  );\n}\n\nexport default CreateChat;\n","import React, { useEffect } from 'react';\nimport SideBar from '../components/navbar/SideBar';\n\nimport styled from 'styled-components';\nimport { useAuth } from '../hooks/auth';\nimport CreateChat from '../components/form/file_upload_form/CreateChat';\n\nconst Section = styled.div`\n  display: flex;\n`;\n\nfunction Demo() {\n  const auth = useAuth();\n\n  useEffect(() => {\n    auth();\n  }, []);\n\n  return (\n    <>\n      <Section>\n        <SideBar />\n        <CreateChat />\n      </Section>\n    </>\n  );\n}\n\nexport default Demo;\n"],"sourceRoot":""}