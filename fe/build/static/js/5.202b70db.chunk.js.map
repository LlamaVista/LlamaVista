{"version":3,"sources":["components/analytics/chart/Chart.tsx","atoms/analytics/atom.analytics.ts","components/analytics/Visualization.tsx","routes/Analytics.tsx"],"names":["Img","styled","img","_templateObject","_taggedTemplateLiteral","Chart","_ref","image_file","value","IMG_URL","concat","React","createElement","Fragment","src","resultDatas","atom","key","default","visualizationDatas","selector","get","filter","data","content","type","isDataExist","fileId","VisualHeader","h1","SummaryWrapper","div","_templateObject2","TapBtn","button","_templateObject3","Visualization","_visualData$activeTab","_visualData$activeTab2","_visualData$activeTab3","visualData","useRecoilValue","console","log","_useState","useState","_useState2","_slicedToArray","activeTab","setActiveTab","map","index","onClick","handleTabClick","style","backgroundColor","file_id","id","text","DATA_KEY_LIST","Section","GridWrapper","AnalyticsWrapper","props","theme","bgColor","ChatFormWrapper","_templateObject4","ChatForm","form","_templateObject5","ChatWrapper","_templateObject6","ChatInput","input","_templateObject7","SubmitBtn","_templateObject8","Analytics","_useRecoilState","useRecoilState","_useRecoilState2","setResultData","_useRecoilState3","_useRecoilState4","isData","setIsData","setDataList","useSetRecoilState","params","useParams","register","useForm","state","useLocation","DATA_KEY","useEffect","localDataList","localStorage","getItem","setItem","JSON","stringify","getDataList","_toConsumableArray","parse","deleteDistinctData","Set","undefined","localData","SideBar","Object","assign","placeholder"],"mappings":"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","file":"static/js/5.202b70db.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface IImgData {\n  image_file: string;\n  value: string;\n}\n\nconst Img = styled.img`\n  width: 700px;\n  height: 400px;\n`;\n\nfunction Chart({ image_file, value }: IImgData) {\n  const IMG_URL = `http://techvista24.com:8000/static/images/${image_file}.png`;\n  return (\n    <>\n      <Img src={IMG_URL} />\n      <p>{value}</p>\n    </>\n  );\n}\n\nexport default Chart;\n","import { atom, selector } from 'recoil';\nimport { IVisualizationData } from '../../interface/analytics/interface.analytics';\n\nexport const resultDatas = atom<IVisualizationData[]>({\n  key: 'resultData',\n  default: [],\n});\n\nexport const visualizationDatas = selector<IVisualizationData[]>({\n  key: 'visualizationDatas',\n  get: ({ get }) => {\n    const resultData = get(resultDatas);\n    const visualData = resultData.filter(\n      (data: IVisualizationData) => data.content[0].type === 'image_file'\n    );\n\n    return visualData;\n  },\n});\n\nexport const isDataExist = atom({\n  key: 'isExist',\n  default: false,\n});\n\nexport const fileId = atom<string[]>({\n  key: 'firstId',\n  default: [],\n});\n","import React, { useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport styled from 'styled-components';\nimport Chart from './chart/Chart';\nimport { IVisualizationData } from '../../interface/analytics/interface.analytics';\nimport { visualizationDatas } from '../../atoms/analytics/atom.analytics';\n\nconst VisualHeader = styled.h1`\n  font-weight: bold;\n`;\n\nconst SummaryWrapper = styled.div``;\n\nconst TapBtn = styled.button``;\n\nfunction Visualization() {\n  const visualData = useRecoilValue(visualizationDatas);\n  console.log(visualData);\n\n  const [activeTab, setActiveTab] = useState(0);\n\n  const handleTabClick = (index: number) => {\n    setActiveTab(index);\n  };\n\n  return (\n    <div>\n      <VisualHeader>visualization</VisualHeader>\n      <SummaryWrapper>\n        {visualData?.map((data: IVisualizationData, index: number) => (\n          <TapBtn\n            key={index}\n            onClick={() => handleTabClick(index)}\n            style={{\n              backgroundColor: index === activeTab ? 'lightblue' : 'white',\n            }}\n          >\n            {index + 1}\n          </TapBtn>\n        ))}\n      </SummaryWrapper>\n      {\n        <Chart\n          image_file={visualData[activeTab]?.content[0].image_file.file_id}\n          key={visualData[activeTab]?.id}\n          value={visualData[activeTab]?.content[1].text.value}\n        />\n      }\n    </div>\n  );\n}\n\nexport default Visualization;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport Visualization from '../components/analytics/Visualization';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport SideBar from '../components/navbar/SideBar';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { ILocation } from '../interface/analytics/interface.analytics';\nimport {\n  fileId,\n  isDataExist,\n  resultDatas,\n} from '../atoms/analytics/atom.analytics';\n\nconst DATA_KEY_LIST = 'data_list';\n\nconst Section = styled.div`\n  display: flex;\n`;\n\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-template-rows: 14fr 1fr;\n  background-color: #ffffff;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst AnalyticsWrapper = styled.div`\n  overflow: auto;\n  border-radius: 15px 15px 0px 0px;\n  padding: 20px 30px 0 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${(props) => props.theme.bgColor};\n`;\n\nconst ChatFormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChatForm = styled.form`\n  width: 60%;\n`;\n\nconst ChatWrapper = styled.div`\n  background-color: ${(props) => props.theme.bgColor};\n`;\nconst ChatInput = styled.input`\n  transition: all 0.3s;\n  text-align: center;\n  width: 100%;\n  height: 30px;\n  border-radius: 10px;\n  outline: none;\n  border: 0;\n  &:focus {\n    background-color: #8888884e;\n  }\n`;\nconst SubmitBtn = styled.button`\n  display: none;\n`;\n\nfunction Analytics() {\n  const [resultData, setResultData] = useRecoilState(resultDatas);\n  const [isData, setIsData] = useRecoilState(isDataExist);\n\n  const setDataList = useSetRecoilState(fileId);\n  const params = useParams<{ fileId: string }>();\n\n  const { register } = useForm();\n\n  const { state } = useLocation<ILocation>();\n\n  const DATA_KEY = params.fileId;\n\n  useEffect(() => {\n    const localDataList = localStorage.getItem(DATA_KEY_LIST);\n\n    if (localDataList === null) {\n      localStorage.setItem(DATA_KEY_LIST, JSON.stringify([DATA_KEY]));\n    } else {\n      const getDataList: string[] = [\n        ...JSON.parse(localDataList || ''),\n        DATA_KEY,\n      ];\n      const deleteDistinctData = [...new Set(getDataList)];\n\n      setDataList(deleteDistinctData);\n      localStorage.setItem(DATA_KEY_LIST, JSON.stringify(deleteDistinctData));\n    }\n\n    if (state?.data !== undefined) {\n      setResultData(state.data);\n      localStorage.setItem(DATA_KEY, JSON.stringify(state.data));\n      setIsData(true);\n    } else {\n      if (localStorage.getItem(DATA_KEY) !== null) {\n        const localData = JSON.parse(localStorage.getItem(DATA_KEY) || '');\n        setResultData(localData);\n        setIsData(true);\n      }\n    }\n  }, [DATA_KEY]);\n\n  // console.log(resultData);\n\n  return (\n    <>\n      {isData ? (\n        <>\n          <Section>\n            <SideBar />\n            <GridWrapper>\n              <AnalyticsWrapper>\n                <Visualization />\n              </AnalyticsWrapper>\n              <ChatFormWrapper>\n                <ChatForm>\n                  <ChatWrapper>\n                    <ChatInput\n                      {...register('user_message')}\n                      placeholder=\"change x axis label to meter per second\"\n                    />\n                    <SubmitBtn type=\"submit\">제출</SubmitBtn>\n                  </ChatWrapper>\n                </ChatForm>\n              </ChatFormWrapper>\n            </GridWrapper>\n          </Section>\n        </>\n      ) : (\n        '파일을 제출해 주세요'\n      )}\n    </>\n  );\n}\n\nexport default Analytics;\n"],"sourceRoot":""}