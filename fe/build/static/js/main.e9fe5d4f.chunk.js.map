{"version":3,"sources":["interface/auth/interface.auth.ts","components/form/auth_form/SignUpForm.tsx","hooks/useEmailMutate.ts","components/form/auth_form/LoginForm.tsx","routes/Login.tsx","components/chat/UserFile.tsx","components/chat/AssistantFile.tsx","components/chat/Message.tsx","components/chat/ChatMessage.tsx","components/chat/StrimingMessage.tsx","routes/ChatRoom.tsx","Router.tsx","App.tsx","index.tsx","atoms/auth/atom.auth.ts","APIs/chat/api.chat.ts","hooks/auth.ts","hooks/useGoogleAccessTokenVaild.ts","components/loading/Loading.tsx","APIs/auth/auth.email.ts","styles/theme.ts","hooks/useEmailLoginTokenValid.ts","APIs/auth/auth.google.ts","atoms/chat/atom.chat.ts","hooks/useLogOut.ts","hooks/useHighLight.ts","components/navbar/SideBar.tsx","components/navbar/SideBarToggleBtn.tsx"],"names":["__webpack_require__","d","__webpack_exports__","TokenKey","isGoogleUser","userData","undefined","Object","keys","length","Form","styled","form","props","theme","mainPage","mostHighlightColor","Input","input","SignUpBtn","button","SignUpForm","register","handleSubmit","useForm","defaultValues","email","name","password","history","useHistory","mutate","useMutation","SignUp","onSuccess","data","alert","push","onError","err","window","location","reload","React","createElement","encType","onSubmit","assign","required","type","placeholder","useEmailMutate","setTokenData","useSetRecoilState","tokenInfo","emailLoginUserInfo","useEmailLoginTokenValid","isLoading","getEmailLoginToken","tokenData","domain","access_token","localStorage","setItem","accessToken","JSON","stringify","error","response","status","console","log","require","config","DNS","process","Container","div","textColor","LogInButton","SignUpToggleLink","Link","SocialLoginBtnWrapper","SocialLoginBtn","GoogleIcon","img","LoginForm","loginMatch","useRouteMatch","signMatuch","username","emailLoginMutate","Loading","Fragment","Switch","Route","exact","path","isExact","to","onClick","src","LoginSection","section","LeftSide","RightSide","RightSideTitleWrapper","DiscriptiopWrapper","Title","h1","Discription","p","MoreBtn","Login","auth","useAuth","state","useLocation","useEffect","isReLoad","className","File","span","UserFile","_ref","fileId","thread_id","fileName","setFileName","useState","getUserSubmitFileList","newData","filter","fileData","async","axios","url","method","responseType","URL","createObjectURL","Blob","link","document","href","setAttribute","style","cssText","body","appendChild","click","remove","Img","AssistantFile","alt","Messages","$role","_ref2","_ref3","Message","_ref4","map","index","_data$file_id","_data$file_id2","key","role","text","file_id","ChatContainer","MessageContainer","memo","isStreamingLoading","size","StrimingMessage","isStreamingDone","Section","GridWrapper","AnalyticsWrapper","bgColor","ChatFormWrapper","ChatForm","ChatWrapper","ChatInput","FileInputWrapper","label","FileInput","FileName","FileUploadError","SubmitBtn","ChatRoom","_errors$file","params","useParams","createStreamingLoading","setCreateStreamingLoading","streamingDone","setStreamingDone","strimingMessage","setStrimingMessage","userMessage","setUserMessage","useRecoilState","userMessages","formState","errors","message","file","THREAD_ID","getChatContentMutate","isChatContentLoading","getChatContenet","chatContent","reverse","chatMutateLoading","sendChat","res","e","chatInput","querySelector","disabled","SideBar","SideBarToggleBtn","ChatMessage","setStreamingLoading","currentChatContent","setChatContent","setStrimingContent","onChange","_e$target","_e$target$files$","target","files","id","Demo","lazy","then","bind","Main","Promise","all","Analytics","LidaRouter","BrowserRouter","Suspense","Redirect","GlobalStyle","createGlobalStyle","bodyColor","App","warn","root","ReactDOM","createRoot","getElementById","queryClient","QueryClient","clientId","render","StrictMode","QueryClientProvider","client","RecoilRoot","ThemeProvider","darkTheme","GoogleOAuthProvider","userInfo","recoil__WEBPACK_IMPORTED_MODULE_0__","atom","default","createChat","getChatList","sendSampleData","axios__WEBPACK_IMPORTED_MODULE_0__","_interface_auth_interface_auth__WEBPACK_IMPORTED_MODULE_1__","getTokenData","parse","getItem","post","headers","Content-Type","Authorization","token_type","formData","FormData","append","fetch","ok","statusText","reader","getReader","decoder","TextDecoder","accumulatedResponse","newMessageData","value","done","read","decode","stream","assistantFileList","getAssistantFileList","get","threadId","onSuccessRedirectUrl","accessTokenData","googleAuth","setUserInfo","getGoogleLoginUserInfo","useGoogleAccessTokenVaild","emailAuth","_accessTokenData","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","spinAnimation","keyframes","Spinner","getEmailLoginUserInfo","deviceSizes","device","mobile","tablet","laptop","sideBarBgColor","sideBarTextColor","borderColor","blurBgColor","highLightBgColor","highLightTextColor","logInTheme","highlightTextColor","TitleColor","boxShadow","react_router_dom__WEBPACK_IMPORTED_MODULE_0__","recoil__WEBPACK_IMPORTED_MODULE_1__","react_query__WEBPACK_IMPORTED_MODULE_2__","_atoms_auth_atom_auth__WEBPACK_IMPORTED_MODULE_3__","_APIs_auth_auth_email__WEBPACK_IMPORTED_MODULE_4__","_interface_auth_interface_auth__WEBPACK_IMPORTED_MODULE_5__","removeItem","pathname","revokeGoogleLoginToken","token","chatList","useLogOut","setUserData","revokeTokenMutate","refreshToken","logOut","useHighLight","highLightColor","initialColor","isMount","linkRef","useRef","currentUrl","highLightElement","handleMouseEnter","event","color","handleMouseLeave","current","forEach","element","fullUrl","linkElementPathName","substring","lastIndexOf","_element","_element2","addEventListener","_element3","_element4","removeEventListener","Header","header","HeaderContent","ToggleBtnWapper","ToggleSpanWapper","ToggleBtn","LidaIcon","LidaText","MeueNav","nav","MeueList","ul","HomeMenu","li","MenuWrapper","DemoMenu","DataRecordList","DataList","Data","AuthList","SignIn","SignOut","DemoLink","sideBarPopUpRef","sideBarRef","chatListData","setChatListData","useRecoilValue","isLogin","setIsLogin","isComponentDidMount","setIsComponentDidMount","getChatMutate","_sideBarPopUpRef$curr","_sideBarPopUpRef$curr2","_sideBarPopUpRef$curr3","dataset","toggleBtnClick","visibility","width","display","mql","matchMedia","matches","btn","addListener","_sideBarPopUpRef$curr4","_sideBarPopUpRef$curr5","_sideBarPopUpRef$curr6","ref","data-state","preventDefault","onDemoClick","clickLogoutBtn"],"mappings":"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","file":"static/js/main.e9fe5d4f.chunk.js","sourcesContent":["export interface ILogin {\n  username: string;\n  password: string;\n}\n\nexport enum TokenKey {\n  'accessToken' = 'access_token',\n  'refreshToken' = 'refresh_token',\n}\n\nexport interface IGoogleLoginTokenData {\n  access_token: string;\n  expires_in: number;\n  id_token: string;\n  refresh_token: string;\n  scope: string;\n  token_type: string;\n  domain?: 'Google';\n}\n\nexport interface IEmailLoginTokenData {\n  access_token: string;\n  token_type: string;\n  domain?: 'Standard';\n}\n\nexport interface ILocalTokenData {\n  access_token: string;\n  domain: 'Standard' | 'Google';\n}\n\nexport interface IEmailUserInfo {\n  email: string;\n  name: string;\n  hashed_password: string;\n  threads: any[];\n}\n\nexport interface IGoogleUserInfo {\n  email: string;\n  given_name: string;\n  id: string;\n  locale: string;\n  name: string;\n  picture: string;\n  verified_email: boolean;\n}\n\nexport interface GetGoogleLoginTokenType {\n  (authorizationCode: string): Promise<IGoogleLoginTokenData>;\n}\n\nexport interface GetEmailLoginTokenType {\n  (data: ILogin): Promise<IEmailLoginTokenData>;\n}\n\nexport function isGoogleUser(userData: any): userData is IGoogleUserInfo {\n  if (userData === null || userData === undefined) return false;\n  return Object.keys(userData).length === 7;\n}\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { SignUp } from '../../../APIs/auth/auth.email';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n\n  h1 {\n    color: ${(props) => props.theme.mainPage.mostHighlightColor};\n    font-size: 50px;\n    margin-bottom: 60px;\n  }\n`;\n\nconst Input = styled.input`\n  margin-bottom: 35px;\n  padding: 8px;\n  background-color: inherit;\n  border: none;\n  outline: none;\n  color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  border-bottom: 1px solid ${(props) => props.theme.mainPage.mostHighlightColor};\n`;\n\nconst SignUpBtn = styled.button`\n  background-color: #4044ed;\n  color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  padding: 10px;\n  cursor: pointer;\n  border: none;\n  margin-bottom: 12px;\n`;\n\nfunction SignUpForm() {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      email: '',\n      name: '',\n      password: '',\n    },\n  });\n\n  const SubmitOnValid = (data: {\n    email: string;\n    name: string;\n    password: string;\n  }) => {\n    mutate(data);\n  };\n\n  const history = useHistory();\n\n  const { mutate } = useMutation(SignUp, {\n    onSuccess: (data) => {\n      alert('회원가입 완료');\n      history.push('/login');\n    },\n    onError: (err) => {\n      alert('이미 존재하는 이메일입니다');\n      window.location.reload();\n    },\n  });\n\n  return (\n    <Form encType=\"multipart/form-data\" onSubmit={handleSubmit(SubmitOnValid)}>\n      <h1>Sign Up</h1>\n      <Input {...register('email')} required type=\"email\" placeholder=\"email\" />\n      <Input {...register('name')} required type=\"text\" placeholder=\"name\" />\n      <Input\n        {...register('password')}\n        required\n        type=\"password\"\n        placeholder=\"password\"\n      />\n      <SignUpBtn type=\"submit\">sign up</SignUpBtn>\n    </Form>\n  );\n}\n\nexport default SignUpForm;\n","import { useSetRecoilState } from 'recoil';\nimport { tokenInfo } from '../atoms/auth/atom.auth';\nimport { useMutation } from 'react-query';\nimport { TokenKey } from '../interface/auth/interface.auth';\nimport { getEmailLoginToken } from '../APIs/auth/auth.email';\nimport { useEmailLoginTokenValid } from './useEmailLoginTokenValid';\n\nexport const useEmailMutate = () => {\n  const setTokenData = useSetRecoilState(tokenInfo);\n\n  const emailLoginUserInfo = useEmailLoginTokenValid('/demo');\n\n  const { mutate, isLoading } = useMutation(getEmailLoginToken, {\n    onSuccess: (tokenData) => {\n      tokenData.domain = 'Standard';\n\n      const { access_token, domain } = tokenData;\n\n      localStorage.setItem(\n        TokenKey.accessToken,\n        JSON.stringify({\n          access_token,\n          domain,\n        })\n      );\n\n      setTokenData(tokenData);\n\n      emailLoginUserInfo({ access_token, domain });\n    },\n    onError: (error: any) => {\n      if (error.response && error.response.status === 401) {\n        alert('잘못된 이메일 혹은 비밀번호');\n        window.location.reload();\n      } else {\n        console.log(error);\n      }\n    },\n  });\n\n  return { mutate, isLoading };\n};\n","import { useGoogleLogin } from '@react-oauth/google';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport SignUpForm from './SignUpForm';\nimport { ILogin } from '../../../interface/auth/interface.auth';\nimport { useEmailMutate } from '../../../hooks/useEmailMutate';\nimport { useGoogleMutate } from '../../../hooks/useGoogleMutate';\nimport Loading from '../../loading/Loading';\nrequire('dotenv').config();\n\nconst DNS = process.env.REACT_APP_DNS;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n\n  h1 {\n    color: ${(props) => props.theme.mainPage.mostHighlightColor};\n    font-size: 50px;\n    margin-bottom: 60px;\n  }\n`;\n\nconst Input = styled.input`\n  margin-bottom: 35px;\n  padding: 8px;\n  background-color: inherit;\n  border: none;\n  outline: none;\n  color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  border-bottom: 1px solid ${(props) => props.theme.mainPage.mostHighlightColor};\n`;\n\nconst LogInButton = styled.button`\n  background-color: #4044ed;\n  color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  padding: 10px;\n  cursor: pointer;\n  border: none;\n  margin-bottom: 12px;\n`;\n\nconst SignUpToggleLink = styled(Link)`\n  transition: 0.5s all;\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  background-color: inherit;\n  padding: 7px 14px;\n  border: 1px solid ${(props) => props.theme.mainPage.mostHighlightColor};\n  border-radius: 16px;\n  color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  &:hover {\n    color: ${(props) => props.theme.textColor};\n    background-color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  }\n`;\n\nconst SocialLoginBtnWrapper = styled.div``;\n\nconst SocialLoginBtn = styled.div`\n  transition: 0.5s all;\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  img {\n    margin-right: 10px;\n  }\n  background-color: inherit;\n  cursor: pointer;\n  padding: 7px;\n  border: 1px solid ${(props) => props.theme.mainPage.mostHighlightColor};\n  border-radius: 16px;\n  color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  &:hover {\n    color: ${(props) => props.theme.textColor};\n    background-color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  }\n`;\n\nconst GoogleIcon = styled.img``;\nconst GithubIcon = styled.img``;\n\nconst onGithubIconEnter = () => {\n  const icon = document.querySelector<HTMLImageElement>('#githubIcon');\n  icon!.src = 'http://techvista24.com:3000/Images/githubBlack.svg';\n};\n\nconst onGithubIconLeave = () => {\n  const icon = document.querySelector<HTMLImageElement>('#githubIcon');\n  icon!.src = 'http://techvista24.com:3000/Images/github.svg';\n};\n\nfunction LoginForm() {\n  const loginMatch = useRouteMatch('/login');\n  const signMatuch = useRouteMatch('/login/signup');\n\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      username: '',\n      password: '',\n    },\n  });\n\n  const { mutate: emailLoginMutate, isLoading } = useEmailMutate();\n\n  const SubmitOnValid = (data: ILogin) => {\n    emailLoginMutate(data);\n  };\n\n  const handleGoogleLogin = () => {\n    alert(\n      'DNS 서비스 기간이 종료되어 현재 구글 로그인 기능을 이용할 수 없습니다. 양해 부탁드립니다'\n    );\n  };\n\n  // const googleLoginMutate = useGoogleMutate();\n\n  // const handleGoogleLogin = useGoogleLogin({\n  //   onSuccess: async ({ code }) => {\n  //     // await axios\n  //     //   .get('http://techvista24.com:8000/callback', { params: { code } })\n  //     //   .then(({ data }) => {\n  //     //     console.log(data);\n  //     //   });\n  //     googleLoginMutate(code);\n  //   },\n\n  //   // onError: (res) => console.log(res),\n  //   flow: 'auth-code',\n  // });\n\n  const handleGithubLogin = () => {\n    // 깃허브 로그인 로직을 작성하세요.\n  };\n\n  return (\n    <Container>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <Switch>\n            <Route exact path={'/login/signup'}>\n              <SignUpForm />\n            </Route>\n          </Switch>\n          <Switch>\n            <Route exact path={'/login'}>\n              <Form\n                encType=\"multipart/form-data\"\n                onSubmit={handleSubmit(SubmitOnValid)}\n              >\n                <h1>Login</h1>\n                <Input\n                  {...register('username')}\n                  required\n                  type=\"email\"\n                  placeholder=\"Id\"\n                />\n                <Input\n                  {...register('password')}\n                  required\n                  type=\"password\"\n                  placeholder=\"password\"\n                />\n                <LogInButton type=\"submit\">login</LogInButton>\n              </Form>\n            </Route>\n          </Switch>\n          {loginMatch?.isExact && (\n            <SignUpToggleLink to={'/login/signup'}>\n              Sign Up With Email\n            </SignUpToggleLink>\n          )}\n          {signMatuch?.isExact && (\n            <SignUpToggleLink to={'/login'}>Log in</SignUpToggleLink>\n          )}\n          <SocialLoginBtnWrapper>\n            <SocialLoginBtn onClick={() => handleGoogleLogin()}>\n              <GoogleIcon src={`${DNS}:3000/Images/google.svg`} />\n              <p>sign in with google</p>\n            </SocialLoginBtn>\n            {/* <SocialLoginBtn\n          onMouseEnter={onGithubIconEnter}\n          onMouseLeave={onGithubIconLeave}\n          onClick={handleGithubLogin}\n        >\n          <GithubIcon\n            id=\"githubIcon\"\n            src=\"http://localhost:3000/Images/github.svg\"\n          />\n          <p>sign in with github</p>\n        </SocialLoginBtn> */}\n          </SocialLoginBtnWrapper>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default LoginForm;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport LoginForm from '../components/form/auth_form/LoginForm';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useAuth } from '../hooks/auth';\n\nconst LoginSection = styled.section`\n  display: flex;\n  justify-content: space-evenly;\n  height: 100vh;\n`;\nconst LeftSide = styled.div`\n  @media (min-width: 1200px) {\n    display: flex;\n  }\n  width: 40%;\n  display: none;\n  align-items: center;\n`;\nconst RightSide = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-evenly;\n`;\n\nconst RightSideTitleWrapper = styled.div`\n  @media (max-width: 1200px) {\n    &.mobile {\n      display: flex;\n    }\n  }\n  display: none;\n  flex-direction: column;\n  border-radius: 20px;\n  width: 60%;\n  padding: 30px;\n  box-shadow: rgba(255, 255, 255, 0.2) 0px 0px 0px 1px;\n  gap: 20px;\n`;\n\nconst DiscriptiopWrapper = styled.div`\n  box-shadow: rgba(255, 255, 255, 0.2) 0px 0px 0px 1px;\n  padding: 50px 80px;\n  border-radius: 20px;\n`;\n\nconst Title = styled.h1`\n  @media (max-width: 1200px) {\n    margin: 0;\n  }\n  color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  font-size: 50px;\n  font-weight: bold;\n  margin-bottom: 30px;\n`;\n\nconst Discription = styled.p`\n  color: ${(props) => props.theme.mainPage.textColor};\n  font-size: 18px;\n`;\n\nconst MoreBtn = styled.button`\n  @media (max-width: 1200px) {\n    padding: 0;\n    margin: 0;\n    width: 20%;\n  }\n\n  background-color: #4044ed;\n  color: ${(props) => props.theme.mainPage.mostHighlightColor};\n  padding: 3px 10px;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  font-family: 'Apple SD gothic neo';\n  font-size: 16px;\n  font-weight: 100;\n  margin-top: 20px;\n`;\n\nfunction Login() {\n  const auth = useAuth('/demo');\n  const { state } = useLocation<{ isReLoad: boolean } | undefined>();\n\n  useEffect(() => {\n    if (state?.isReLoad) {\n      window.location.reload();\n    }\n    auth();\n  }, []);\n  return (\n    <>\n      <LoginSection>\n        <LeftSide>\n          <DiscriptiopWrapper>\n            <Title>VISTA</Title>\n            <Discription>\n              VISTA is a convenient command prompt-based tool for data analysis,\n              receiving JSON and Excel files as inputs and providing users with\n              a variety of analysis results.\n              <br /> <br />\n              This data analysis service operates on a command prompt basis and\n              is a tool that provides immediate analysis results when users\n              enter various data formats such as JSON and Excel files through\n              commands.\n              <br /> <br />\n              This service is useful to data scientists and nonprofessionals\n              alike as a tool that allows data analytics to be easily performed\n              at a command prompt. It is also modularized to facilitate the\n              addition of new analytics capabilities and data formats, making it\n              highly scalable. Services evolve through continuous updates and\n              user feedback, lowering barriers to data analytics to help users\n              gain more insight.\n            </Discription>\n            <MoreBtn>\n              <p>\n                <Link to={'/home'}>Learn More</Link>\n              </p>\n            </MoreBtn>\n          </DiscriptiopWrapper>\n        </LeftSide>\n        <RightSide>\n          <RightSideTitleWrapper className=\"mobile\">\n            <Title>VISTA</Title>\n            <Discription>\n              VISTA is a convenient command prompt-based tool for data analysis\n              receiving JSON and Excel files as inputs and providing users with\n              a variety of analysis results.\n              <br /> <br />\n              This data analysis service operates on a command prompt basis and\n              is a tool that provides immediate analysis results when users\n              enter various data formats such as JSON and Excel files through\n              commands.\n            </Discription>\n            <MoreBtn>\n              <p>\n                <Link to={'/home'}>Learn More</Link>\n              </p>\n            </MoreBtn>\n          </RightSideTitleWrapper>\n          <LoginForm />\n        </RightSide>\n      </LoginSection>\n    </>\n  );\n}\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { UserFileComponentProps } from '../../interface/chat/interface.chating';\nimport { useMutation } from 'react-query';\nimport { getUserSubmitFileList } from '../../APIs/chat/api.chat';\nimport Loading from '../loading/Loading';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst File = styled.span`\n  cursor: pointer;\n  color: blue;\n`;\n\nconst UserFile = ({ fileId, thread_id }: UserFileComponentProps) => {\n  const [fileName, setFileName] = useState<string>('');\n\n  const { mutate, isLoading } = useMutation(getUserSubmitFileList, {\n    // onError: (e) => console.log(e),\n    onSuccess: (data) => {\n      const newData = data.filter((fileData) => fileId[0] in fileData);\n      setFileName(newData[0][fileId[0]]);\n    },\n  });\n\n  useEffect(() => {\n    mutate(thread_id);\n  }, []);\n\n  const DNS = process.env.REACT_APP_DNS;\n  const SPRING_PORT = process.env.REACT_APP_PORT;\n\n  const onFileClick = async () => {\n    const response = await axios({\n      url: `${DNS}:${SPRING_PORT}/static/files/${fileId}.csv`,\n      method: 'GET',\n      responseType: 'blob',\n    });\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `${fileName}`);\n    link.style.cssText = 'display:none';\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        fileName && <File onClick={onFileClick}>{fileName}</File>\n      )}\n    </>\n  );\n};\n\nexport default UserFile;\n","import React from 'react';\nimport { IAssistantFileComponentProps } from '../../interface/chat/interface.chating';\nimport styled from 'styled-components';\n\nconst Img = styled.img`\n  width: 70%;\n`;\n\nconst AssistantFile = ({ fileId }: IAssistantFileComponentProps) => {\n  const DNS = process.env.REACT_APP_DNS;\n  const SPRING_PORT = process.env.REACT_APP_PORT;\n\n  return (\n    <>\n      <br />\n      <br />\n      <Img src={`${DNS}:${SPRING_PORT}/static/images/${fileId}.png`} alt=\"\" />\n    </>\n  );\n};\n\nexport default AssistantFile;\n","import React from 'react';\nimport styled from 'styled-components';\nimport UserFile from './UserFile';\nimport AssistantFile from './AssistantFile';\nimport {\n  IMessageProps,\n  MessageProps,\n} from '../../interface/chat/interface.chating';\n\nconst Messages = styled.div<{ $role: 'user' | 'assistant' }>`\n  background-color: ${({ $role }) =>\n    $role === 'user' ? '#e6f7ff' : '#f4f4f4'};\n  color: ${({ $role }) => ($role === 'user' ? '#000000' : '#000000')};\n  padding: 8px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  align-self: ${({ $role }) => ($role === 'user' ? 'flex-end' : 'flex-start')};\n`;\n\nfunction Message({ data, thread_id }: IMessageProps) {\n  return (\n    <>\n      {data && (\n        <>\n          {data.map((data, index) => (\n            <Messages key={index} $role={data.role}>\n              {data?.text}\n              {data.role === 'user' &&\n                data.file_id !== undefined &&\n                data.file_id?.length !== 0 && (\n                  <UserFile\n                    key={index}\n                    thread_id={thread_id as string}\n                    fileId={data.file_id}\n                  />\n                )}\n              {data.role === 'assistant' &&\n                data.file_id !== undefined &&\n                data.file_id?.length !== 0 &&\n                data.file_id.map((fileId) => (\n                  <AssistantFile key={fileId} fileId={fileId} />\n                ))}\n            </Messages>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ChatProps } from '../../interface/chat/interface.chating';\nimport Loading from '../loading/Loading';\nimport Message from './Message';\n\nconst ChatContainer = styled.div`\n  width: 85%;\n  border-radius: 10px;\n  padding: 10px;\n  margin: 20px;\n  margin-bottom: 0;\n  padding-bottom: 0;\n`;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChatMessage = ({ data, isStreamingLoading, thread_id }: ChatProps) => {\n  return (\n    <ChatContainer>\n      <MessageContainer>\n        <Message data={data} thread_id={thread_id}></Message>\n        {isStreamingLoading && <Loading size=\"15px\" />}\n      </MessageContainer>\n    </ChatContainer>\n  );\n};\n\nexport default React.memo(ChatMessage);\n","import React from 'react';\nimport styled from 'styled-components';\nimport AssistantFile from './AssistantFile';\nimport { IMessageProps } from '../../interface/chat/interface.chating';\n\nconst Messages = styled.div<{ $role: 'user' | 'assistant' }>`\n  background-color: ${({ $role }) =>\n    $role === 'user' ? '#e6f7ff' : '#f4f4f4'};\n  color: ${({ $role }) => ($role === 'user' ? '#000000' : '#000000')};\n  padding: 8px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  align-self: ${({ $role }) => ($role === 'user' ? 'flex-end' : 'flex-start')};\n`;\n\nfunction StrimingMessage({ data, isStreamingDone }: IMessageProps) {\n  return (\n    <>\n      {data && !isStreamingDone ? (\n        <>\n          {data.map((data, index) => (\n            <Messages key={index} $role={data.role}>\n              {data?.text}\n            </Messages>\n          ))}\n        </>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default StrimingMessage;\n","import React, { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { useMutation, useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport SideBar from '../components/navbar/SideBar';\nimport { useAuth } from '../hooks/auth';\nimport { useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { getChatContenet, sendChat } from '../APIs/chat/api.chat';\nimport { userMessages } from '../atoms/chat/atom.chat';\nimport {\n  IChatFormData,\n  MessageProps,\n} from '../interface/chat/interface.chating';\nimport ChatMessage from '../components/chat/ChatMessage';\nimport Loading from '../components/loading/Loading';\nimport SideBarToggleBtn from '../components/navbar/SideBarToggleBtn';\nimport StrimingMessage from '../components/chat/StrimingMessage';\n\nconst Section = styled.div`\n  display: flex;\n`;\n\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-template-rows: 14fr 2fr;\n  background-color: #ffffff;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst AnalyticsWrapper = styled.div`\n  overflow: auto;\n  border-radius: 15px 15px 0px 0px;\n  padding: 20px 30px 0 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${(props) => props.theme.bgColor};\n`;\n\nconst ChatFormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChatForm = styled.form`\n  width: 60%;\n`;\n\nconst ChatWrapper = styled.div`\n  background-color: ${(props) => props.theme.bgColor};\n`;\nconst ChatInput = styled.input`\n  transition: all 0.3s;\n  text-align: center;\n  width: 100%;\n  height: 30px;\n  border-radius: 10px;\n  outline: none;\n  border: 0;\n  &:focus {\n    background-color: #8888884e;\n  }\n`;\n\nconst FileInputWrapper = styled.label`\n  display: inline-block;\n  padding: 5px 10px;\n  background-color: #f0f0f0;\n  color: #333;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 10px;\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst FileName = styled.span``;\nconst FileUploadError = styled.span`\n  color: red;\n  margin-left: 10px;\n`;\n\nconst SubmitBtn = styled.button`\n  display: none;\n`;\n\nconst ChatContainer = styled.div`\n  width: 85%;\n  border-radius: 10px;\n  padding: 10px;\n`;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction ChatRoom() {\n  const params = useParams<{ thread_id: string }>();\n\n  const [createStreamingLoading, setCreateStreamingLoading] = useState(false);\n  const [streamingDone, setStreamingDone] = useState(false);\n  const [strimingMessage, setStrimingMessage] = useState<MessageProps[] | null>(\n    null\n  );\n\n  const [fileName, setFileName] = useState();\n  const [userMessage, setUserMessage] = useRecoilState(userMessages);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      message: '',\n      file: '',\n    },\n  });\n\n  const THREAD_ID = params.thread_id;\n  const auth = useAuth();\n\n  const { mutate: getChatContentMutate, isLoading: isChatContentLoading } =\n    useMutation(getChatContenet, {\n      onSuccess: (chatContent) => {\n        chatContent.reverse();\n        chatContent[0].text = null;\n        setUserMessage(chatContent);\n      },\n    });\n\n  useEffect(() => {\n    auth();\n    getChatContentMutate(THREAD_ID);\n  }, [THREAD_ID]);\n\n  const { mutate, isLoading: chatMutateLoading } = useMutation(sendChat, {\n    onSuccess: (res) => {\n      // console.log(res);\n    },\n    onError: (e) => {\n      // console.log(e);\n    },\n  });\n\n  useEffect(() => {\n    const chatInput = document.querySelector('#chatInput') as HTMLInputElement;\n    if (chatInput !== null) {\n      if (chatMutateLoading) {\n        chatInput.disabled = true;\n      } else {\n        chatInput.disabled = false;\n      }\n    }\n  }, [chatMutateLoading]);\n\n  const onHadleSubmit = (data: IChatFormData) => {\n    let newData: MessageProps[];\n\n    if (userMessage[0] !== undefined) {\n      if (data.file[0] !== undefined) {\n        newData = [\n          ...userMessage,\n          { text: data.file[0].name, role: 'user' },\n          { text: data.message, role: 'user' },\n        ];\n      } else {\n        newData = [...userMessage, { text: data.message, role: 'user' }];\n      }\n\n      setUserMessage(newData);\n    } else {\n      if (data.file[0] !== undefined) {\n        newData = [\n          { text: data.file[0].name, role: 'user' },\n          { text: data.message, role: 'user' },\n        ];\n      } else {\n        newData = [{ text: data.message, role: 'user' }];\n      }\n      setUserMessage(newData);\n    }\n\n    mutate({\n      message: data.message,\n      thread_id: THREAD_ID,\n      setStreamingLoading: setCreateStreamingLoading,\n      setStreamingDone: setStreamingDone,\n      file: data.file[0],\n      currentChatContent: newData,\n      setChatContent: setUserMessage,\n      setStrimingContent: setStrimingMessage,\n    });\n  };\n\n  return (\n    <>\n      <Section>\n        <SideBar />\n        <SideBarToggleBtn />\n        <GridWrapper>\n          <AnalyticsWrapper>\n            {isChatContentLoading ? (\n              <Loading />\n            ) : (\n              <>\n                <ChatMessage\n                  thread_id={THREAD_ID}\n                  isStreamingLoading={createStreamingLoading}\n                  data={userMessage}\n                />\n                <ChatContainer>\n                  <MessageContainer>\n                    <StrimingMessage\n                      isStreamingDone={streamingDone}\n                      data={strimingMessage}\n                    />\n                  </MessageContainer>\n                </ChatContainer>\n              </>\n            )}\n          </AnalyticsWrapper>\n          <ChatFormWrapper>\n            <ChatForm\n              onSubmit={handleSubmit(onHadleSubmit)}\n              encType=\"multipart/form-data\"\n            >\n              <ChatWrapper>\n                <FileInputWrapper>\n                  <FileName>{fileName ? fileName : 'No file chosen'}</FileName>\n                  <FileInput\n                    {...register('file', {\n                      required: false,\n                      // validate: (value: any) => {\n                      //   const acceptedFormats = ['csv', 'json'];\n                      //   const fileExtension = value[0]?.name\n                      //     .split('.')\n                      //     .pop()\n                      //     .toLowerCase();\n                      //   if (!acceptedFormats.includes(fileExtension)) {\n                      //     return 'Invalid file format. Only csv or files are allowed.';\n                      //   }\n                      // },\n                      onChange: (e: any) => {\n                        setFileName(e?.target?.files[0]?.name);\n                      },\n                    })}\n                    type=\"file\"\n                  />\n                </FileInputWrapper>\n                <FileUploadError>\n                  {errors?.file?.message as any}\n                </FileUploadError>\n                <ChatInput\n                  required\n                  {...register('message')}\n                  id=\"chatInput\"\n                  placeholder=\"change x axis label to meter per second\"\n                ></ChatInput>\n                <SubmitBtn type=\"submit\">제출</SubmitBtn>\n              </ChatWrapper>\n            </ChatForm>\n          </ChatFormWrapper>\n        </GridWrapper>\n      </Section>\n    </>\n  );\n}\n\nexport default ChatRoom;\n","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Login from './routes/Login';\nimport ChatRoom from './routes/ChatRoom';\n\nconst Demo = lazy(() => import('./routes/Demo'));\nconst Main = lazy(() => import('./routes/Main'));\nconst Analytics = lazy(() => import('./routes/Analytics'));\n\nfunction LidaRouter() {\n  return (\n    <BrowserRouter>\n      <Suspense>\n        <Switch>\n          <Route path=\"/chat/:thread_id\">\n            <ChatRoom />\n          </Route>\n          <Route path=\"/analytics/:fileId\">\n            <Analytics />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/demo\">\n            <Demo />\n          </Route>\n          <Route path=\"/home\">\n            <Main />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/home\" />\n          </Route>\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default LidaRouter;\n","import React from 'react';\nimport LidaRouter from './Router';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tfont-weight: 300;\n\tline-height: 1.2;\n  background-color:${(props) => props.theme.bodyColor};\n  color:${(props) => props.theme.textColor}\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\na {\n\ttext-decoration: none;\n\tcolor:inherit;\n}\n`;\n\nfunction App() {\n  console.warn = () => {};\n  return (\n    <>\n      <GlobalStyle />\n      <LidaRouter />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from './styles/theme';\nimport { RecoilRoot } from 'recoil';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\n\nrequire('dotenv').config();\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nconst queryClient = new QueryClient();\n\nconst clientId = process.env.REACT_APP_GOOGLE_OAUTH_CLIENTID;\n\nroot.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <RecoilRoot>\n        <ThemeProvider theme={darkTheme}>\n          {clientId && (\n            <GoogleOAuthProvider clientId={clientId}>\n              <App />\n            </GoogleOAuthProvider>\n          )}\n        </ThemeProvider>\n      </RecoilRoot>\n    </QueryClientProvider>\n  </React.StrictMode>\n);\n","import { atom } from 'recoil';\nimport {\n  IEmailLoginTokenData,\n  IEmailUserInfo,\n  IGoogleLoginTokenData,\n  IGoogleUserInfo,\n} from '../../interface/auth/interface.auth';\n\nexport const tokenInfo = atom<IGoogleLoginTokenData | IEmailLoginTokenData>({\n  key: 'tokenData',\n});\n\nexport const userInfo = atom<IGoogleUserInfo | null | IEmailUserInfo>({\n  key: 'userData',\n  default: null,\n});\n","import axios from 'axios';\nimport { PostFormDataBody } from '../../interface/analytics/interface.analytics';\nimport { TokenKey } from '../../interface/auth/interface.auth';\nimport {\n  IFileList,\n  ISendApiProps,\n  IThreadId,\n  MessageProps,\n} from '../../interface/chat/interface.chating';\n\nrequire('dotenv').config();\n\nconst DNS = process.env.REACT_APP_DNS;\nconst SPRING_PORT = process.env.REACT_APP_PORT;\n\nconst getTokenData = () => {\n  const tokenData = JSON.parse(\n    localStorage.getItem(TokenKey.accessToken) as string\n  );\n  return tokenData;\n};\n\nexport const createChat = async (data: PostFormDataBody) => {\n  const tokenData = getTokenData();\n\n  const res = await axios.post(`${DNS}:${SPRING_PORT}/create-chat`, data, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      Authorization: `Bearer ${tokenData.access_token}`,\n      token_type: tokenData.domain,\n    },\n  });\n\n  return res.data;\n};\n\nexport const sendChat = async (data: ISendApiProps) => {\n  const tokenData = getTokenData();\n\n  const formData = new FormData();\n\n  formData.append('message', data.message);\n  formData.append('thread_id', data.thread_id);\n  if (data.file !== undefined) {\n    formData.append('file', data.file);\n  }\n\n  try {\n    data.setStreamingLoading(true);\n    const response = await fetch(`${DNS}:${SPRING_PORT}/continue-chat`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${tokenData.access_token}`,\n        token_type: tokenData.domain,\n      },\n      body: formData,\n    });\n    if (!response.ok || !response.body) {\n      throw response.statusText;\n    }\n\n    const reader = response.body.getReader();\n    const decoder = new TextDecoder();\n    let accumulatedResponse = '';\n    let newMessageData: MessageProps[] = [];\n\n    while (true) {\n      const { value, done } = await reader.read();\n      data.setStreamingLoading(false);\n      if (done) {\n        break;\n      }\n      const decodedChunk = decoder.decode(value, { stream: true });\n      accumulatedResponse += decodedChunk;\n\n      newMessageData = [\n        ...data.currentChatContent,\n        { text: accumulatedResponse, role: 'assistant' },\n      ];\n\n      data.setStrimingContent([\n        { text: accumulatedResponse, role: 'assistant' },\n      ]);\n    }\n\n    data.setStreamingDone(true);\n    data.setChatContent(newMessageData);\n\n    const assistantFileList = await getAssistantFileList(data.thread_id);\n\n    const newData: MessageProps[] = [\n      ...data.currentChatContent,\n      {\n        text: accumulatedResponse,\n        role: 'assistant',\n        file_id: assistantFileList,\n      },\n    ];\n\n    data.setChatContent(newData);\n\n    return assistantFileList;\n  } catch (error) {\n    // 다른 에러 처리\n  } finally {\n  }\n};\n\nexport const getChatList = async () => {\n  const tokenData = getTokenData();\n\n  const res = await axios.get<IThreadId[]>(`${DNS}:${SPRING_PORT}/chat-list`, {\n    headers: {\n      Authorization: `Bearer ${tokenData.access_token}`,\n      token_type: tokenData.domain,\n    },\n  });\n\n  return res.data;\n};\n\nexport const getChatContenet = async (threadId: string) => {\n  const tokenData = getTokenData();\n\n  const res = await axios.get<MessageProps[]>(\n    `${DNS}:${SPRING_PORT}/db-store`,\n    {\n      headers: {\n        Authorization: `Bearer ${tokenData.access_token}`,\n        token_type: tokenData.domain,\n      },\n      params: {\n        thread_id: threadId,\n      },\n    }\n  );\n\n  return res.data;\n};\n\nexport const getUserSubmitFileList = async (threadId: string) => {\n  const tokenData = getTokenData();\n\n  const res = await axios.get<IFileList[]>(`${DNS}:${SPRING_PORT}/user_file`, {\n    headers: {\n      Authorization: `Bearer ${tokenData.access_token}`,\n      token_type: tokenData.domain,\n    },\n    params: {\n      thread_id: threadId,\n    },\n  });\n\n  return res.data;\n};\n\nexport const sendSampleData = async (fileName: string) => {\n  const tokenData = getTokenData();\n\n  const formData = new FormData();\n\n  formData.append('csv_name', fileName);\n\n  const res = await axios.post(\n    `${DNS}:${SPRING_PORT}/create-chat-example`,\n    formData,\n    {\n      headers: {\n        Authorization: `Bearer ${tokenData.access_token}`,\n        token_type: tokenData.domain,\n      },\n    }\n  );\n\n  return res.data;\n};\n\nexport const getAssistantFileList = async (threadId: string) => {\n  const tokenData = getTokenData();\n\n  const res = await axios.get<string[]>(`${DNS}:${SPRING_PORT}/file-store`, {\n    headers: {\n      Authorization: `Bearer ${tokenData.access_token}`,\n      token_type: tokenData.domain,\n    },\n    params: {\n      thread_id: threadId,\n    },\n  });\n\n  return res.data;\n};\n","import { useHistory } from 'react-router-dom';\nimport { ILocalTokenData, TokenKey } from '../interface/auth/interface.auth';\nimport { useEmailLoginTokenValid } from './useEmailLoginTokenValid';\nimport { useGoogleAccessTokenVaild } from './useGoogleAccessTokenVaild';\n\nexport const useAuth = (onSuccessRedirectUrl?: string) => {\n  const data: string | null = localStorage.getItem(TokenKey.accessToken);\n\n  let accessTokenData: null | ILocalTokenData;\n\n  if (data === null) {\n    accessTokenData = null;\n  } else {\n    accessTokenData = JSON.parse(data);\n  }\n\n  const history = useHistory();\n\n  const googleAuth = useGoogleAccessTokenVaild(onSuccessRedirectUrl);\n  const emailAuth = useEmailLoginTokenValid(onSuccessRedirectUrl);\n\n  const auth = () => {\n    if (accessTokenData === null) {\n      history.push('/login');\n    } else {\n      if (accessTokenData?.domain === 'Google') {\n        googleAuth(accessTokenData.access_token);\n      } else {\n        emailAuth({\n          access_token: accessTokenData.access_token,\n          domain: accessTokenData.domain,\n        });\n      }\n    }\n  };\n\n  return auth;\n};\n","import { useHistory } from 'react-router-dom';\nimport { useSetRecoilState } from 'recoil';\nimport { useMutation } from 'react-query';\nimport { getGoogleLoginUserInfo } from '../APIs/auth/auth.google';\nimport { userInfo } from '../atoms/auth/atom.auth';\n\nexport const useGoogleAccessTokenVaild = (onSuccessRedirectUrl?: string) => {\n  const setUserInfo = useSetRecoilState(userInfo);\n  const history = useHistory();\n\n  const { mutate } = useMutation(getGoogleLoginUserInfo, {\n    onSuccess: (data) => {\n      setUserInfo(data);\n      // console.log(data);\n      if (onSuccessRedirectUrl !== undefined) {\n        history.push(onSuccessRedirectUrl);\n      }\n    },\n    onError: (error) => {\n      history.push('/login');\n    },\n  });\n\n  return mutate;\n};\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst spinAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div<{ size: string }>`\n  border: 6px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #4044ed;\n  border-radius: 50%;\n  width: ${(props) => props.size};\n  height: ${(props) => props.size};\n  animation: ${spinAnimation} 1.5s linear infinite;\n`;\n\n// 로딩 컴포넌트 함수 작성\nconst Loading = ({ size = '50px' }) => {\n  return <Spinner size={size} />;\n};\n\nexport default Loading;\n","import { IEmailUserInfo } from './../../interface/auth/interface.auth';\nimport axios from 'axios';\nimport { PostFormDataBody } from '../../interface/analytics/interface.analytics';\nimport {\n  IEmailLoginTokenData,\n  ILocalTokenData,\n  ILogin,\n} from '../../interface/auth/interface.auth';\n\nrequire('dotenv').config();\n\nconst DNS = process.env.REACT_APP_DNS;\nconst SPRING_PORT = process.env.REACT_APP_PORT;\n\nexport const SignUp = async (data: PostFormDataBody) => {\n  const res = await axios.post(`${DNS}:${SPRING_PORT}/user/register`, data);\n\n  return res.data;\n};\n\nexport const getEmailLoginToken = async (data: ILogin) => {\n  const res = await axios.post<IEmailLoginTokenData>(\n    `${DNS}:${SPRING_PORT}/user/login`,\n    data,\n    {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    }\n  );\n\n  return res.data;\n};\n\nexport const getEmailLoginUserInfo = async (tokenData: ILocalTokenData) => {\n  const res = await axios.get<IEmailUserInfo>(\n    `${DNS}:${SPRING_PORT}/user/protected`,\n    {\n      headers: {\n        Authorization: `Bearer ${tokenData.access_token}`,\n        token_type: tokenData.domain,\n      },\n    }\n  );\n\n  return res.data;\n};\n","import { DefaultTheme } from 'styled-components';\n\n// export const darkTheme: DefaultTheme = {\n//   bodyColor: 'black',\n//   sideBarBgColor: 'black',\n//   sideBarTextColor: '#888888',\n//   bgColor: 'black',\n//   borderColor: 'rgba(255, 255, 255, 0.4)',\n//   blurBgColor: 'rgba(172, 172, 172, 0.8)',\n//   textColor: '#888888',\n//   highLightBgColor: '#626161',\n//   highLightTextColor: '#FFFFFF',\n//   logInTheme: {\n//     textColor: '#ffffff',\n//   },\n//   mainPage: {\n//     highlightTextColor: '#FAFAFA',\n//     TitleColor: '#D6D6D6',\n//     textColor: '#888888',\n//     mostHighlightColor: '#FFFFFF',\n//     boxShadow: 'rgba(255, 255, 255, 0.14) 0px 0px 0px 1px',\n//   },\n// };\n\nconst deviceSizes = {\n  tablet: 910,\n  laptop: 1200,\n};\n\nexport const darkTheme: DefaultTheme = {\n  device: {\n    mobile: `(max-width: ${deviceSizes.tablet}px)`,\n    tablet: `(min-width: ${deviceSizes.tablet}px) and (max-width: ${deviceSizes.laptop}px)`,\n    laptop: `screen and (min-width: ${deviceSizes.laptop}px)`,\n  },\n  bodyColor: 'black',\n  sideBarBgColor: 'black',\n  sideBarTextColor: '#888888',\n  bgColor: '#ffffff',\n  borderColor: 'black',\n  blurBgColor: 'rgba(172, 172, 172, 0.8)',\n  textColor: 'black',\n  highLightBgColor: '#626161',\n  highLightTextColor: '#FFFFFF',\n  logInTheme: {\n    textColor: '#ffffff',\n  },\n  mainPage: {\n    highlightTextColor: '#FAFAFA',\n    TitleColor: '#D6D6D6',\n    textColor: '#888888',\n    mostHighlightColor: '#FFFFFF',\n    boxShadow: 'rgba(255, 255, 255, 0.14) 0px 0px 0px 1px',\n  },\n};\n\nexport const lightTheme: DefaultTheme = {\n  bodyColor: 'black',\n  sideBarBgColor: 'black',\n  sideBarTextColor: '#888888',\n  bgColor: '#ffffff',\n  borderColor: 'black',\n  blurBgColor: 'rgba(172, 172, 172, 0.8)',\n  textColor: 'black',\n  highLightBgColor: '#626161',\n  highLightTextColor: '#FFFFFF',\n  logInTheme: {\n    textColor: '#ffffff',\n  },\n  mainPage: {\n    highlightTextColor: '#FAFAFA',\n    TitleColor: '#D6D6D6',\n    textColor: '#888888',\n    mostHighlightColor: '#FFFFFF',\n    boxShadow: 'rgba(255, 255, 255, 0.14) 0px 0px 0px 1px',\n  },\n};\n","import { useHistory } from 'react-router-dom';\nimport { useSetRecoilState } from 'recoil';\nimport { useMutation } from 'react-query';\nimport { userInfo } from '../atoms/auth/atom.auth';\nimport { getEmailLoginUserInfo } from '../APIs/auth/auth.email';\nimport { TokenKey } from '../interface/auth/interface.auth';\n\nexport const useEmailLoginTokenValid = (onSuccessRedirectUrl?: string) => {\n  const setUserInfo = useSetRecoilState(userInfo);\n  const history = useHistory();\n\n  const { mutate } = useMutation(getEmailLoginUserInfo, {\n    onSuccess: (data) => {\n      setUserInfo(data);\n      // console.log(data);\n      if (onSuccessRedirectUrl !== undefined) {\n        history.push(onSuccessRedirectUrl);\n      }\n    },\n    onError: (error: any) => {\n      if (error.response && error.response.status === 401) {\n        localStorage.removeItem(TokenKey.accessToken);\n        alert('세션이 만료되었습니다. 재로그인 해주세요');\n        history.push({ pathname: '/login', state: { isReLoad: true } });\n      }\n    },\n  });\n\n  return mutate;\n};\n","import axios from 'axios';\nimport {\n  IGoogleLoginTokenData,\n  IGoogleUserInfo,\n} from '../../interface/auth/interface.auth';\n\nexport const getGoogleLoginToken = async (authorizationCode: string) => {\n  // 기본 요청 매개변수\n  const data = {\n    grant_type: 'authorization_code',\n    code: authorizationCode,\n    client_id: process.env.REACT_APP_GOOGLE_OAUTH_CLIENTID,\n    client_secret: process.env.REACT_APP_GOOGLE_OAUTH_CLIENTSECRET,\n    redirect_uri: 'http://localhost:3000',\n  };\n\n  const tokenUrl = process.env.REACT_APP_GOOGLE_OAUTH_TOKEN_URL as string;\n\n  // POST 요청 수행\n  const res = await axios.post<IGoogleLoginTokenData>(tokenUrl, null, {\n    params: data,\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  });\n\n  return res.data;\n};\n\nexport const getGoogleLoginUserInfo = async (accessToken: string) => {\n  const userInfoUrl = process.env.REACT_APP_GOOGLE_OAUTH_USERINFO_URL as string;\n\n  const res = await axios.get<IGoogleUserInfo>(userInfoUrl, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n\n  return res.data;\n};\n\nexport const revokeGoogleLoginToken = async (accessToken: string) => {\n  const revokeTokenUrl = process.env\n    .REACT_APP_GOOGLE_OAUTH_REVOKE_TOKEN as string;\n\n  const res = await axios.post(\n    revokeTokenUrl,\n    { token: accessToken },\n    {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    }\n  );\n\n  return res;\n};\n","import { atom } from 'recoil';\nimport {\n  IThreadId,\n  MessageProps,\n} from '../../interface/chat/interface.chating';\n\nexport const userMessages = atom<MessageProps[]>({\n  key: 'userMessages',\n  default: [],\n});\n\nexport const promptMessages = atom<MessageProps[]>({\n  key: 'promptMessages',\n});\n\nexport const chatList = atom<IThreadId[]>({\n  key: 'chatList',\n  default: [],\n});\n\nexport const streamingResponse = atom<string>({\n  key: 'response',\n  default: '',\n});\n\nexport const isChatLoading = atom<boolean>({\n  key: 'isChatLoading',\n  default: false,\n});\n","import { useMutation } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { revokeGoogleLoginToken } from '../APIs/auth/auth.google';\nimport {\n  ILocalTokenData,\n  TokenKey,\n  isGoogleUser,\n} from '../interface/auth/interface.auth';\nimport { useRecoilState } from 'recoil';\nimport { userInfo } from '../atoms/auth/atom.auth';\n\nexport const useLogOut = () => {\n  const history = useHistory();\n  const [userData, setUserData] = useRecoilState(userInfo);\n\n  const data = localStorage.getItem(TokenKey.accessToken) as string;\n\n  const accessTokenData: ILocalTokenData = JSON.parse(data);\n\n  const { mutate: revokeTokenMutate } = useMutation(revokeGoogleLoginToken, {\n    onSuccess: (data) => {\n      // console.log(data);\n      localStorage.removeItem(TokenKey.accessToken);\n      localStorage.removeItem(TokenKey.refreshToken);\n      setUserData(null);\n      history.push('/login');\n    },\n    onError: (error) => {\n      // console.log(error);\n    },\n  });\n\n  const logOut = () => {\n    if (isGoogleUser(userData)) {\n      revokeTokenMutate(accessTokenData.access_token);\n    } else {\n      localStorage.removeItem(TokenKey.accessToken);\n      setUserData(null);\n      history.push('/login');\n    }\n  };\n\n  return logOut;\n};\n","import { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const useHighLight = (\n  highLightColor: string,\n  initialColor: string,\n  isMount?: boolean\n) => {\n  const linkRef = useRef<HTMLAnchorElement[] | null[]>([]);\n  const { pathname: currentUrl } = useLocation();\n\n  useEffect(() => {\n    let highLightElement: HTMLAnchorElement;\n\n    const handleMouseEnter = (event: MouseEvent) => {\n      const element = event.target as HTMLAnchorElement;\n      element.style.color = highLightColor;\n      highLightElement.style.color = initialColor;\n    };\n\n    const handleMouseLeave = (event: MouseEvent) => {\n      const element = event.target as HTMLAnchorElement;\n      element.style.color = initialColor;\n      highLightElement.style.color = highLightColor;\n    };\n\n    if (isMount || currentUrl == '/home') {\n      linkRef?.current.forEach((element) => {\n        element = element as HTMLAnchorElement;\n\n        console.log(element);\n\n        const fullUrl = element.href;\n        const linkElementPathName = fullUrl.substring(\n          fullUrl.lastIndexOf('3000') + 4\n        );\n\n        console.log(currentUrl, linkElementPathName);\n\n        if (linkElementPathName === currentUrl) {\n          highLightElement = element;\n          highLightElement.style.color = highLightColor;\n        } else {\n          element?.addEventListener('mouseenter', (e) => handleMouseEnter(e));\n          element?.addEventListener('mouseleave', (e) => handleMouseLeave(e));\n        }\n      });\n    }\n\n    return () => {\n      linkRef?.current.forEach((element) => {\n        element = element as HTMLAnchorElement;\n\n        element?.removeEventListener('mouseenter', handleMouseEnter);\n        element?.removeEventListener('mouseleave', handleMouseLeave);\n      });\n    };\n  }, [isMount]);\n\n  return linkRef;\n};\n","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useRecoilState, useRecoilValue } from 'recoil';\n\nimport styled from 'styled-components';\n\nimport { userInfo } from '../../atoms/auth/atom.auth';\n\nimport { fileId } from '../../atoms/analytics/atom.analytics';\nimport { useAuth } from '../../hooks/auth';\nimport { useLogOut } from '../../hooks/useLogOut';\nimport { useHighLight } from '../../hooks/useHighLight';\nimport { darkTheme } from '../../styles/theme';\nimport { chatList } from '../../atoms/chat/atom.chat';\nimport { useMutation } from 'react-query';\nimport { getChatList } from '../../APIs/chat/api.chat';\nimport { TokenKey } from '../../interface/auth/interface.auth';\n\nconst Header = styled.header`\n  box-shadow: rgba(255, 255, 255, 0.18) 1px 0px 0px 0px;\n  text-align: center;\n  p {\n    color: #d6d6d6;\n  }\n  a,\n  span {\n    color: ${(props) => props.theme.sideBarTextColor};\n    font-weight: 400;\n  }\n  background-color: ${(props) => props.theme.sideBarBgColor};\n`;\n\nconst HeaderContent = styled.div`\n  @media (max-width: 730px) {\n    transition: width 2s;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 3;\n    width: 100vw !important;\n  }\n  background-color: ${(props) => props.theme.sideBarBgColor};\n  position: sticky;\n  top: 0;\n  transition: width 1s;\n  width: 180px;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst ToggleBtnWapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ToggleSpanWapper = styled.span`\n  position: relative;\n\n  span {\n    padding: 5px;\n    background-color: #ffffff;\n    color: black;\n    position: fixed;\n    display: none;\n  }\n  &[data-state='displayed-open'] {\n    span {\n      display: block;\n    }\n  }\n`;\n\nconst ToggleBtn = styled.button`\n  cursor: pointer;\n`;\n\nconst LidaIcon = styled.div`\n  flex: 0 0 20%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LidaText = styled.p`\n  color: #ffffff !important;\n  font-size: 25px;\n  font-weight: bold !important;\n  text-transform: uppercase;\n`;\n\nconst MeueNav = styled.nav`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex: 0 0 70%;\n`;\n\nconst MeueList = styled.ul`\n  li {\n    display: flex;\n    justify-content: center;\n  }\n  li div {\n    display: flex;\n    justify-content: center;\n    border-radius: 3px;\n    gap: 10px;\n    padding: 3px 0;\n    width: 85%;\n  }\n`;\n\nconst HomeMenu = styled.li`\n  div a {\n    transition: color 0.5s;\n  }\n`;\n\nconst MenuWrapper = styled.div``;\n\nconst HomeMenuImg = styled.img``;\n\nconst DemoMenu = styled.li`\n  div a {\n    transition: color 0.5s;\n  }\n`;\n\nconst DemoMenuImg = styled.img``;\n\nconst DataRecordList = styled.ul``;\n\nconst DataList = styled.li`\n  p {\n    font-weight: bold;\n  }\n`;\n\nconst Data = styled.li`\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n  a {\n    transition: color 0.5s;\n  }\n`;\n\nconst AuthList = styled.ul`\n  li {\n    margin-bottom: 5px;\n  }\n  p {\n    margin-bottom: 10px;\n    font-weight: bold;\n  }\n`;\n\nconst SignIn = styled.li`\n  a {\n    transition: color 0.5s;\n  }\n  a:hover {\n    color: ${(props) => props.theme.highLightTextColor};\n  }\n`;\n\nconst SignOut = styled.li`\n  a,\n  span {\n    transition: color 0.5s;\n  }\n  a,\n  span:hover {\n    color: ${(props) => props.theme.highLightTextColor};\n    cursor: pointer;\n  }\n`;\n\nconst DemoLink = styled(Link)`\n  cursor: pointer;\n`;\n\nfunction SideBar() {\n  const sideBarPopUpRef = useRef<HTMLSpanElement | null>(null);\n  const sideBarRef = useRef<HTMLDivElement | null>(null);\n\n  const [chatListData, setChatListData] = useRecoilState(chatList);\n\n  const userData = useRecoilValue(userInfo);\n  const [isLogin, setIsLogin] = useState(false);\n  const [isComponentDidMount, setIsComponentDidMount] = useState(false);\n\n  const { mutate: getChatMutate, isLoading } = useMutation(getChatList, {\n    onError: (e) => {\n      // console.log(e);\n    },\n    onSuccess: (chatList) => {\n      setChatListData(chatList);\n      setIsComponentDidMount(true);\n    },\n  });\n\n  useEffect(() => {\n    const handleMouseEnter = (e: MouseEvent) => {\n      const element = e.target as HTMLSpanElement;\n      element.dataset.state = 'displayed-open';\n    };\n\n    const handleMouseLeave = (e: MouseEvent) => {\n      const element = e.target as HTMLSpanElement;\n      element.dataset.state = 'close';\n    };\n\n    const toggleBtnClick = (e: MouseEvent) => {\n      const element = sideBarRef?.current as HTMLDivElement;\n      element.style.visibility = 'hidden';\n      element.style.width = '0';\n      const btn = document.querySelector('.toggleBtn') as HTMLSpanElement;\n      btn.style.display = 'block';\n    };\n\n    const mql = window.matchMedia('(max-width: 1160px)');\n\n    sideBarPopUpRef?.current?.addEventListener('mouseenter', (e) =>\n      handleMouseEnter(e)\n    );\n    sideBarPopUpRef?.current?.addEventListener('mouseleave', (e) =>\n      handleMouseLeave(e)\n    );\n    sideBarPopUpRef?.current?.addEventListener('click', (e) =>\n      toggleBtnClick(e)\n    );\n\n    if (mql.matches) {\n      const btn = sideBarPopUpRef?.current as HTMLSpanElement;\n      btn?.click();\n    } else {\n      const btn = document.querySelector('.toggleBtn') as HTMLSpanElement;\n      btn?.click();\n    }\n\n    mql.addListener((e) => {\n      if (e.matches) {\n        const btn = sideBarPopUpRef?.current as HTMLSpanElement;\n        btn?.click();\n      } else {\n        const btn = document.querySelector('.toggleBtn') as HTMLSpanElement;\n        btn?.click();\n      }\n    });\n\n    return () => {\n      sideBarPopUpRef?.current?.removeEventListener('mouseenter', (e) =>\n        handleMouseEnter(e)\n      );\n      sideBarPopUpRef?.current?.removeEventListener('mouseleave', (e) =>\n        handleMouseLeave(e)\n      );\n      sideBarPopUpRef?.current?.removeEventListener('click', (e) =>\n        toggleBtnClick(e)\n      );\n    };\n  }, []);\n\n  useEffect(() => {\n    if (userData != null) {\n      setIsLogin(true);\n    }\n    // if (localStorage.getItem(DATA_KEY_List) !== null) {\n    //   const getDataList: string[] = [\n    //     ...JSON.parse(localStorage.getItem(DATA_KEY_List) || ''),\n    //   ];\n    //   setDataList([...new Set(getDataList)]);\n    //   localStorage.setItem(\n    //     DATA_KEY_List,\n    //     JSON.stringify([...new Set(getDataList)])\n    //   );\n    // }\n  }, [userData]);\n\n  useEffect(() => {\n    if (isLogin) {\n      getChatMutate();\n    }\n  }, [isLogin]);\n\n  const logOut = useLogOut();\n\n  const clickLogoutBtn = () => {\n    logOut();\n  };\n\n  const auth = useAuth('/demo');\n  const history = useHistory();\n\n  const onDemoClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    if (localStorage.getItem(TokenKey.accessToken) == undefined) {\n      alert('로그인 이후 이용 가능합니다');\n      history.push('/login');\n    } else {\n      auth();\n    }\n  };\n\n  const linkRef = useHighLight(\n    darkTheme.highLightTextColor,\n    darkTheme.sideBarTextColor,\n    isComponentDidMount\n  );\n\n  return (\n    <>\n      <Header>\n        <HeaderContent className=\"header\" ref={sideBarRef}>\n          <ToggleBtnWapper>\n            <ToggleSpanWapper data-state=\"closed\" ref={sideBarPopUpRef}>\n              <ToggleBtn>X</ToggleBtn>\n              <span>사이드바 닫기</span>\n            </ToggleSpanWapper>\n          </ToggleBtnWapper>\n          <LidaIcon>\n            <LidaText>vista</LidaText>\n          </LidaIcon>\n          <MeueNav>\n            <MeueList>\n              <HomeMenu>\n                <MenuWrapper id=\"home\">\n                  {/* <HomeMenuImg src=\"http://localhost:3000/Images/home.svg\" /> */}\n                  <Link\n                    ref={(element) => (linkRef.current[0] = element)}\n                    to={'/home'}\n                  >\n                    Home\n                  </Link>\n                </MenuWrapper>\n              </HomeMenu>\n              <DemoMenu>\n                <MenuWrapper id=\"demo\">\n                  {/* <DemoMenuImg src=\"http://localhost:3000/Images/demo.svg\" /> */}\n                  <DemoLink\n                    ref={(element) => (linkRef.current[1] = element)}\n                    onClick={(e) => onDemoClick(e)}\n                    to={'/demo'}\n                  >\n                    Create Chat\n                  </DemoLink>\n                </MenuWrapper>\n              </DemoMenu>\n            </MeueList>\n            <DataRecordList>\n              <DataList>\n                <p>DataList</p>\n              </DataList>\n              {isLogin &&\n                chatListData?.map((chatList, index) => (\n                  <Data key={chatList.thread_id}>\n                    <Link\n                      ref={(element) => (linkRef.current[index + 2] = element)}\n                      to={`/chat/${chatList.thread_id}`}\n                    >\n                      {chatList.name}\n                    </Link>\n                  </Data>\n                ))}\n              {/* {dataList?.map((fileId, index) => (\n                <Data key={fileId}>\n                  <Link\n                    ref={(element) => (linkRef.current[index + 2] = element)}\n                    to={`/analytics/${fileId}`}\n                  >\n                    Data\n                  </Link>\n                </Data>\n              ))} */}\n            </DataRecordList>\n            <AuthList>\n              <p>Authentication</p>\n              {isLogin ? (\n                <SignOut onClick={clickLogoutBtn}>\n                  <span>SignOut</span>\n                </SignOut>\n              ) : (\n                <SignIn>\n                  <Link to={'/login'}>SignIn</Link>\n                </SignIn>\n              )}\n            </AuthList>\n          </MeueNav>\n        </HeaderContent>\n      </Header>\n    </>\n  );\n}\n\nexport default React.memo(SideBar);\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst ToggleBtnWapper = styled.div`\n  position: sticky;\n  top: 0;\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst ToggleSpanWapper = styled.span`\n  position: relative;\n  display: none;\n\n  span {\n    padding: 5px;\n    background-color: #ffffff;\n    color: black;\n    position: fixed;\n    display: none;\n  }\n  &[data-state='displayed-open'] {\n    span {\n      display: block;\n    }\n  }\n`;\n\nconst ToggleBtn = styled.button`\n  cursor: pointer;\n`;\n\nfunction SideBarToggleBtn() {\n  const sideBarPopUpRef = useRef<HTMLSpanElement | null>(null);\n\n  useEffect(() => {\n    const handleMouseEnter = (e: MouseEvent) => {\n      const element = e.target as HTMLSpanElement;\n      element.dataset.state = 'displayed-open';\n    };\n\n    const handleMouseLeave = (e: MouseEvent) => {\n      const element = e.target as HTMLSpanElement;\n      element.dataset.state = 'close';\n    };\n\n    const toggleBtnClick = (e: MouseEvent) => {\n      const element = document.querySelector('.header') as HTMLDivElement;\n      element.style.visibility = 'visible';\n      const btn = sideBarPopUpRef?.current as HTMLSpanElement;\n      btn.style.display = 'none';\n\n      const mql = window.matchMedia('(max-width: 730px)');\n\n      if (mql.matches) {\n        element.style.width = '100vw';\n      } else {\n        element.style.width = '180px';\n      }\n    };\n\n    sideBarPopUpRef?.current?.addEventListener('mouseenter', (e) =>\n      handleMouseEnter(e)\n    );\n    sideBarPopUpRef?.current?.addEventListener('mouseleave', (e) =>\n      handleMouseLeave(e)\n    );\n    sideBarPopUpRef?.current?.addEventListener('click', (e) =>\n      toggleBtnClick(e)\n    );\n\n    return () => {\n      sideBarPopUpRef?.current?.removeEventListener('mouseenter', (e) =>\n        handleMouseEnter(e)\n      );\n      sideBarPopUpRef?.current?.removeEventListener('mouseleave', (e) =>\n        handleMouseLeave(e)\n      );\n      sideBarPopUpRef?.current?.removeEventListener('click', (e) =>\n        toggleBtnClick(e)\n      );\n    };\n  }, []);\n\n  return (\n    <ToggleBtnWapper>\n      <ToggleSpanWapper\n        className=\"toggleBtn\"\n        data-state=\"closed\"\n        ref={sideBarPopUpRef}\n      >\n        <ToggleBtn>X</ToggleBtn>\n        <span>사이드바 열기</span>\n      </ToggleSpanWapper>\n    </ToggleBtnWapper>\n  );\n}\n\nexport default SideBarToggleBtn;\n"],"sourceRoot":""}