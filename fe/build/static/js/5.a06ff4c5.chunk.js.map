{"version":3,"sources":["components/analytics/chart/Chart.tsx","atoms/analytics/atom.analytics.ts","components/analytics/Visualization.tsx","routes/Analytics.tsx"],"names":["Img","styled","img","Chart","_ref","image_file","value","IMG_URL","React","createElement","Fragment","src","resultDatas","atom","key","default","visualizationDatas","selector","get","filter","data","content","type","isDataExist","fileId","VisualHeader","h1","SummaryWrapper","div","TapBtn","button","Visualization","_visualData$activeTab","_visualData$activeTab2","_visualData$activeTab3","visualData","useRecoilValue","console","log","activeTab","setActiveTab","useState","map","index","onClick","handleTabClick","style","backgroundColor","file_id","id","text","DATA_KEY_LIST","Section","GridWrapper","AnalyticsWrapper","props","theme","bgColor","ChatFormWrapper","ChatForm","form","ChatWrapper","ChatInput","input","SubmitBtn","Analytics","resultData","setResultData","useRecoilState","isData","setIsData","setDataList","useSetRecoilState","params","useParams","register","useForm","state","useLocation","DATA_KEY","useEffect","localDataList","localStorage","getItem","setItem","JSON","stringify","getDataList","parse","deleteDistinctData","Set","undefined","localData","SideBar","Object","assign","placeholder"],"mappings":"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","file":"static/js/5.a06ff4c5.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface IImgData {\n  image_file: string;\n  value: string;\n}\n\nconst Img = styled.img`\n  width: 700px;\n  height: 400px;\n`;\n\nfunction Chart({ image_file, value }: IImgData) {\n  const IMG_URL = `http://techvista24.com:8000/static/images/${image_file}.png`;\n  return (\n    <>\n      <Img src={IMG_URL} />\n      <p>{value}</p>\n    </>\n  );\n}\n\nexport default Chart;\n","import { atom, selector } from 'recoil';\nimport { IVisualizationData } from '../../interface/analytics/interface.analytics';\n\nexport const resultDatas = atom<IVisualizationData[]>({\n  key: 'resultData',\n  default: [],\n});\n\nexport const visualizationDatas = selector<IVisualizationData[]>({\n  key: 'visualizationDatas',\n  get: ({ get }) => {\n    const resultData = get(resultDatas);\n    const visualData = resultData.filter(\n      (data: IVisualizationData) => data.content[0].type === 'image_file'\n    );\n\n    return visualData;\n  },\n});\n\nexport const isDataExist = atom({\n  key: 'isExist',\n  default: false,\n});\n\nexport const fileId = atom<string[]>({\n  key: 'firstId',\n  default: [],\n});\n","import React, { useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport styled from 'styled-components';\nimport Chart from './chart/Chart';\nimport { IVisualizationData } from '../../interface/analytics/interface.analytics';\nimport { visualizationDatas } from '../../atoms/analytics/atom.analytics';\n\nconst VisualHeader = styled.h1`\n  font-weight: bold;\n`;\n\nconst SummaryWrapper = styled.div``;\n\nconst TapBtn = styled.button``;\n\nfunction Visualization() {\n  const visualData = useRecoilValue(visualizationDatas);\n  console.log(visualData);\n\n  const [activeTab, setActiveTab] = useState(0);\n\n  const handleTabClick = (index: number) => {\n    setActiveTab(index);\n  };\n\n  return (\n    <div>\n      <VisualHeader>visualization</VisualHeader>\n      <SummaryWrapper>\n        {visualData?.map((data: IVisualizationData, index: number) => (\n          <TapBtn\n            key={index}\n            onClick={() => handleTabClick(index)}\n            style={{\n              backgroundColor: index === activeTab ? 'lightblue' : 'white',\n            }}\n          >\n            {index + 1}\n          </TapBtn>\n        ))}\n      </SummaryWrapper>\n      {\n        <Chart\n          image_file={visualData[activeTab]?.content[0].image_file.file_id}\n          key={visualData[activeTab]?.id}\n          value={visualData[activeTab]?.content[1].text.value}\n        />\n      }\n    </div>\n  );\n}\n\nexport default Visualization;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport Visualization from '../components/analytics/Visualization';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport SideBar from '../components/navbar/SideBar';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { ILocation } from '../interface/analytics/interface.analytics';\nimport {\n  fileId,\n  isDataExist,\n  resultDatas,\n} from '../atoms/analytics/atom.analytics';\n\nconst DATA_KEY_LIST = 'data_list';\n\nconst Section = styled.div`\n  display: flex;\n`;\n\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-template-rows: 14fr 1fr;\n  background-color: #ffffff;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst AnalyticsWrapper = styled.div`\n  overflow: auto;\n  border-radius: 15px 15px 0px 0px;\n  padding: 20px 30px 0 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${(props) => props.theme.bgColor};\n`;\n\nconst ChatFormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChatForm = styled.form`\n  width: 60%;\n`;\n\nconst ChatWrapper = styled.div`\n  background-color: ${(props) => props.theme.bgColor};\n`;\nconst ChatInput = styled.input`\n  transition: all 0.3s;\n  text-align: center;\n  width: 100%;\n  height: 30px;\n  border-radius: 10px;\n  outline: none;\n  border: 0;\n  &:focus {\n    background-color: #8888884e;\n  }\n`;\nconst SubmitBtn = styled.button`\n  display: none;\n`;\n\nfunction Analytics() {\n  const [resultData, setResultData] = useRecoilState(resultDatas);\n  const [isData, setIsData] = useRecoilState(isDataExist);\n\n  const setDataList = useSetRecoilState(fileId);\n  const params = useParams<{ fileId: string }>();\n\n  const { register } = useForm();\n\n  const { state } = useLocation<ILocation>();\n\n  const DATA_KEY = params.fileId;\n\n  useEffect(() => {\n    const localDataList = localStorage.getItem(DATA_KEY_LIST);\n\n    if (localDataList === null) {\n      localStorage.setItem(DATA_KEY_LIST, JSON.stringify([DATA_KEY]));\n    } else {\n      const getDataList: string[] = [\n        ...JSON.parse(localDataList || ''),\n        DATA_KEY,\n      ];\n      const deleteDistinctData = [...new Set(getDataList)];\n\n      setDataList(deleteDistinctData);\n      localStorage.setItem(DATA_KEY_LIST, JSON.stringify(deleteDistinctData));\n    }\n\n    if (state?.data !== undefined) {\n      setResultData(state.data);\n      localStorage.setItem(DATA_KEY, JSON.stringify(state.data));\n      setIsData(true);\n    } else {\n      if (localStorage.getItem(DATA_KEY) !== null) {\n        const localData = JSON.parse(localStorage.getItem(DATA_KEY) || '');\n        setResultData(localData);\n        setIsData(true);\n      }\n    }\n  }, [DATA_KEY]);\n\n  // console.log(resultData);\n\n  return (\n    <>\n      {isData ? (\n        <>\n          <Section>\n            <SideBar />\n            <GridWrapper>\n              <AnalyticsWrapper>\n                <Visualization />\n              </AnalyticsWrapper>\n              <ChatFormWrapper>\n                <ChatForm>\n                  <ChatWrapper>\n                    <ChatInput\n                      {...register('user_message')}\n                      placeholder=\"change x axis label to meter per second\"\n                    />\n                    <SubmitBtn type=\"submit\">제출</SubmitBtn>\n                  </ChatWrapper>\n                </ChatForm>\n              </ChatFormWrapper>\n            </GridWrapper>\n          </Section>\n        </>\n      ) : (\n        '파일을 제출해 주세요'\n      )}\n    </>\n  );\n}\n\nexport default Analytics;\n"],"sourceRoot":""}